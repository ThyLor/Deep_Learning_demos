{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 0 - Preliminary functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import numpy as np\n",
    "\n",
    "# On some implementations of matplotlib, you may need to change this value\n",
    "IMAGE_SIZE = 72\n",
    "\n",
    "def generate_a_drawing(figsize, U, V, noise):\n",
    "    fig = plt.figure(figsize=(figsize,figsize))\n",
    "    ax = plt.subplot(111)\n",
    "    plt.axis('Off')\n",
    "    ax.set_xlim(0,figsize)\n",
    "    ax.set_ylim(0,figsize)\n",
    "    ax.fill(U, V, \"b\")\n",
    "    # !!!! fig.canvas\n",
    "    fig.canvas.draw()\n",
    "    #print(fig.canvas.tostring_rgb())\n",
    "    imdata = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)[::3].astype(np.float32)\n",
    "    #print(max(imdata))\n",
    "    imdata = imdata + noise * np.random.random(imdata.size)\n",
    "    plt.close(fig)\n",
    "    return imdata\n",
    "\n",
    "def generate_a_rectangle(noise=4, free_location=False):\n",
    "    noise = 300\n",
    "    figsize = 1.0    \n",
    "    U = np.zeros(4)\n",
    "    V = np.zeros(4)\n",
    "    if free_location:\n",
    "        corners = np.random.random(4)\n",
    "        top = max(corners[0], corners[1])\n",
    "        bottom = min(corners[0], corners[1])\n",
    "        left = min(corners[2], corners[3])\n",
    "        right = max(corners[2], corners[3])\n",
    "    else:\n",
    "        side = (0.3 + 0.7 * np.random.random()) * figsize\n",
    "        top = figsize/2 + side/2\n",
    "        bottom = figsize/2 - side/2\n",
    "        left = bottom\n",
    "        right = top\n",
    "    U[0] = U[1] = top\n",
    "    U[2] = U[3] = bottom\n",
    "    V[0] = V[3] = left\n",
    "    V[1] = V[2] = right\n",
    "    return generate_a_drawing(figsize, U, V, noise)\n",
    "\n",
    "\n",
    "def generate_a_disk(noise=0.0, free_location=False):\n",
    "    figsize = 1.0\n",
    "    if free_location:\n",
    "        center = np.random.random(2)\n",
    "    else:\n",
    "        center = (figsize/2, figsize/2)\n",
    "    radius = (0.3 + 0.7 * np.random.random()) * figsize/2\n",
    "    N = 50\n",
    "    U = np.zeros(N)\n",
    "    V = np.zeros(N)\n",
    "    i = 0\n",
    "    for t in np.linspace(0, 2*np.pi, N):\n",
    "        U[i] = center[0] + np.cos(t) * radius\n",
    "        V[i] = center[1] + np.sin(t) * radius\n",
    "        i = i + 1\n",
    "    return generate_a_drawing(figsize, U, V, noise)\n",
    "\n",
    "def generate_a_triangle(noise=0.0, free_location=False):\n",
    "    figsize = 1.0\n",
    "    if free_location:\n",
    "        U = np.random.random(3)\n",
    "        V = np.random.random(3)\n",
    "    else:\n",
    "        size = (0.3 + 0.7 * np.random.random())*figsize/2\n",
    "        middle = figsize/2\n",
    "        U = (middle, middle+size, middle-size)\n",
    "        V = (middle+size, middle-size, middle-size)\n",
    "    imdata = generate_a_drawing(figsize, U, V, noise)\n",
    "    return [imdata, [U[0], V[0], U[1], V[1], U[2], V[2]]]\n",
    "\n",
    "def generate_dataset_classification(nb_samples, noise=0.0, free_location=False):\n",
    "    # Getting im_size:\n",
    "    im_size = generate_a_rectangle().shape[0]\n",
    "    X = np.zeros([nb_samples,im_size])\n",
    "    Y = np.zeros(nb_samples)\n",
    "    print('Creating data:')\n",
    "    for i in range(nb_samples):\n",
    "        if i % 10 == 0:\n",
    "            print(i)\n",
    "        category = np.random.randint(3)\n",
    "        if category == 0:\n",
    "            X[i] = generate_a_rectangle(noise, free_location)\n",
    "        elif category == 1: \n",
    "            X[i] = generate_a_disk(noise, free_location)\n",
    "        else:\n",
    "            [X[i], V] = generate_a_triangle(noise, free_location)\n",
    "        Y[i] = category\n",
    "    X = (X + noise) / (255 + 2 * noise)\n",
    "    return [X, Y]\n",
    "\n",
    "def generate_test_set_classification():\n",
    "    np.random.seed(42)\n",
    "    [X_test, Y_test] = generate_dataset_classification(300, 20, True)\n",
    "    Y_test = np_utils.to_categorical(Y_test, 3) \n",
    "    return [X_test, Y_test]\n",
    "\n",
    "def generate_dataset_regression(nb_samples, noise=0.0):\n",
    "    # Getting im_size:\n",
    "    im_size = generate_a_triangle()[0].shape[0]\n",
    "    X = np.zeros([nb_samples,im_size])\n",
    "    Y = np.zeros([nb_samples, 6])\n",
    "    print('Creating data:')\n",
    "    for i in range(nb_samples):\n",
    "        #if i % 10 == 0:\n",
    "            #print(i)\n",
    "        [X[i], Y[i]] = generate_a_triangle(noise, True)\n",
    "    X = (X + noise) / (255 + 2 * noise)\n",
    "    return [X, Y]\n",
    "\n",
    "### Generating couples\n",
    "\n",
    "def generate_a_drawing_couple(figsize, U, V, noise):\n",
    "    fig = plt.figure(figsize=(figsize,figsize))\n",
    "    ax = plt.subplot(111)\n",
    "    plt.axis('Off')\n",
    "    ax.set_xlim(0,figsize)\n",
    "    ax.set_ylim(0,figsize)\n",
    "    ax.fill(U, V, \"b\")\n",
    "    # !!!! fig.canvas\n",
    "    fig.canvas.draw()\n",
    "    #print(fig.canvas.tostring_rgb())\n",
    "    imdata = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)[::3].astype(np.float32)\n",
    "    print(max(imdata))\n",
    "    imdata_noise = imdata + noise * np.random.random(imdata.size)\n",
    "    plt.close(fig)\n",
    "    return imdata,imdata_noise\n",
    "\n",
    "def generate_a_rectangle_couple(noise=100, free_location=False):\n",
    "    figsize = 1.0    \n",
    "    U = np.zeros(4)\n",
    "    V = np.zeros(4)\n",
    "    if free_location:\n",
    "        corners = np.random.random(4)\n",
    "        top = max(corners[0], corners[1])\n",
    "        bottom = min(corners[0], corners[1])\n",
    "        left = min(corners[2], corners[3])\n",
    "        right = max(corners[2], corners[3])\n",
    "    else:\n",
    "        side = (0.3 + 0.7 * np.random.random()) * figsize\n",
    "        top = figsize/2 + side/2\n",
    "        bottom = figsize/2 - side/2\n",
    "        left = bottom\n",
    "        right = top\n",
    "    U[0] = U[1] = top\n",
    "    U[2] = U[3] = bottom\n",
    "    V[0] = V[3] = left\n",
    "    V[1] = V[2] = right\n",
    "    return generate_a_drawing_couple(figsize, U, V, noise)\n",
    "\n",
    "\n",
    "def generate_a_disk_couple(noise=0.0, free_location=False):\n",
    "    figsize = 1.0\n",
    "    if free_location:\n",
    "        center = np.random.random(2)\n",
    "    else:\n",
    "        center = (figsize/2, figsize/2)\n",
    "    radius = (0.3 + 0.7 * np.random.random()) * figsize/2\n",
    "    N = 50\n",
    "    U = np.zeros(N)\n",
    "    V = np.zeros(N)\n",
    "    i = 0\n",
    "    for t in np.linspace(0, 2*np.pi, N):\n",
    "        U[i] = center[0] + np.cos(t) * radius\n",
    "        V[i] = center[1] + np.sin(t) * radius\n",
    "        i = i + 1\n",
    "    return generate_a_drawing_couple(figsize, U, V, noise)\n",
    "\n",
    "def generate_a_triangle_couple(noise=0.0, free_location=False):\n",
    "    figsize = 1.0\n",
    "    if free_location:\n",
    "        U = np.random.random(3)\n",
    "        V = np.random.random(3)\n",
    "    else:\n",
    "        size = (0.3 + 0.7 * np.random.random())*figsize/2\n",
    "        middle = figsize/2\n",
    "        U = (middle, middle+size, middle-size)\n",
    "        V = (middle+size, middle-size, middle-size)\n",
    "    return generate_a_drawing_couple(figsize, U, V, noise)\n",
    "\n",
    "im = generate_a_rectangle(10, True)\n",
    "plt.imshow(im.reshape(IMAGE_SIZE,IMAGE_SIZE), cmap='gray')\n",
    "\n",
    "#im = generate_a_disk(10)\n",
    "plt.imshow(im.reshape(IMAGE_SIZE,IMAGE_SIZE), cmap='gray')\n",
    "\n",
    "#[im, v] = generate_a_triangle(20, False)\n",
    "plt.imshow(im.reshape(IMAGE_SIZE,IMAGE_SIZE), cmap='gray')\n",
    "\n",
    "def generate_dataset_classification_couple(nb_samples, noise=0.0, free_location=False):\n",
    "    # Getting im_size:\n",
    "    im_size = generate_a_rectangle().shape[0]\n",
    "    X = np.zeros([nb_samples,im_size])\n",
    "    X_noise = np.zeros([nb_samples,im_size])\n",
    "    Y = np.zeros(nb_samples)\n",
    "    for i in range(nb_samples):\n",
    "        if i % 10 == 0:\n",
    "            print(i)\n",
    "        category = np.random.randint(3)\n",
    "        if category == 0:\n",
    "            X[i], X_noise[i] = generate_a_rectangle_couple(noise, free_location)\n",
    "        elif category == 1: \n",
    "            X[i], X_noise[i]  = generate_a_disk_couple(noise, free_location)\n",
    "        else:\n",
    "            [X[i], X_noise[i]] = generate_a_triangle_couple(noise, free_location)\n",
    "    X = X/255\n",
    "    X_noise = (X_noise + noise) / (255 + 2 * noise)\n",
    "    return [X,X_noise]\n",
    "\n",
    "def generate_test_set_classification_couple(n_test=300,noise=20,free_location=True):\n",
    "    np.random.seed(42)\n",
    "    [X_test,X_test_noise] = generate_dataset_classification_couple(n_test, noise, free_location)\n",
    "    return [X_test, X_test_noise]\n",
    "\n",
    "def generate_dataset_regression_couple(nb_samples, noise=0.0):\n",
    "    # Getting im_size:\n",
    "    im_size = generate_a_triangle()[0].shape[0]\n",
    "    X = np.zeros([nb_samples,im_size])\n",
    "    Y = np.zeros([nb_samples, 6])\n",
    "    print('Creating data:')\n",
    "    for i in range(nb_samples):\n",
    "        if i % 10 == 0:\n",
    "            print(i)\n",
    "        [X[i], Y[i]] = generate_a_triangle(noise, True)\n",
    "    X = (X + noise) / (255 + 2 * noise)\n",
    "    return [X, Y]\n",
    "\n",
    "######## -----\n",
    "\n",
    "import matplotlib.patches as patches\n",
    "\n",
    "def visualize_prediction(x, y):\n",
    "    fig, ax = plt.subplots(figsize=(5, 5))\n",
    "    I = x.reshape((IMAGE_SIZE,IMAGE_SIZE))\n",
    "    ax.imshow(I, extent=[-0.15,1.15,-0.15,1.15],cmap='gray')\n",
    "    ax.set_xlim([0,1])\n",
    "    ax.set_ylim([0,1])\n",
    "\n",
    "    xy = y.reshape(3,2)\n",
    "    tri = patches.Polygon(xy, closed=True, fill = False, edgecolor = 'r', linewidth = 5, alpha = 0.5)\n",
    "    ax.add_patch(tri)\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "def generate_test_set_regression():\n",
    "    np.random.seed(42)\n",
    "    [X_test, Y_test] = generate_dataset_regression(300, 20)\n",
    "    return [X_test, Y_test]\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1 - Simple Classifcation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.1 - Generate data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating data:\n",
      "0\n",
      "10\n",
      "20\n",
      "30\n",
      "40\n",
      "50\n",
      "60\n",
      "70\n",
      "80\n",
      "90\n",
      "100\n",
      "110\n",
      "120\n",
      "130\n",
      "140\n",
      "150\n",
      "160\n",
      "170\n",
      "180\n",
      "190\n",
      "200\n",
      "210\n",
      "220\n",
      "230\n",
      "240\n",
      "250\n",
      "260\n",
      "270\n",
      "280\n",
      "290\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from keras.utils import np_utils\n",
    "\n",
    "[X_train, Y_train] = generate_dataset_classification(300, 20)\n",
    "\n",
    "# Convert into categorical format\n",
    "Y_train = np_utils.to_categorical(Y_train, 3)\n",
    "\n",
    "# Find out the values\n",
    "n,fig_size = X_train.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1.2. - With SGD optimizer "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.1 - Buil a model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.models import Sequential\n",
    "\n",
    "model_SGD = Sequential()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.2 - Add the layers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_1 (Dense)              (None, 3)                 15555     \n",
      "_________________________________________________________________\n",
      "activation_1 (Activation)    (None, 3)                 0         \n",
      "=================================================================\n",
      "Total params: 15,555\n",
      "Trainable params: 15,555\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from keras.layers import Dense, Activation\n",
    "\n",
    "nb_neurons = 3\n",
    "\n",
    "model_SGD.add(Dense(nb_neurons, input_shape=(fig_size,)))\n",
    "model_SGD.add(Activation('softmax'))\n",
    "\n",
    "model_SGD.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.3 - Compiler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.optimizers import SGD\n",
    "\n",
    "lr_sgd = 0.01\n",
    "decay_sgd = 1e-6\n",
    "momentum_sgd = 0.9\n",
    "nesterov_sgd = True\n",
    "\n",
    "sgd = SGD(lr = lr_sgd, decay = 1e-6, momentum = momentum_sgd, nesterov = nesterov_sgd)\n",
    "model_SGD.compile(loss='categorical_crossentropy',optimizer=sgd,metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.4 - Fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/40\n",
      "300/300 [==============================] - 32s 107ms/step - loss: 10.0788 - acc: 0.2867\n",
      "Epoch 2/40\n",
      "300/300 [==============================] - 0s 237us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 3/40\n",
      "300/300 [==============================] - 0s 297us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 4/40\n",
      "300/300 [==============================] - 0s 220us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 5/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 6/40\n",
      "300/300 [==============================] - 0s 180us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 7/40\n",
      "300/300 [==============================] - 0s 183us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 8/40\n",
      "300/300 [==============================] - 0s 227us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 9/40\n",
      "300/300 [==============================] - 0s 173us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 10/40\n",
      "300/300 [==============================] - 0s 173us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 11/40\n",
      "300/300 [==============================] - 0s 160us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 12/40\n",
      "300/300 [==============================] - 0s 163us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 13/40\n",
      "300/300 [==============================] - 0s 157us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 14/40\n",
      "300/300 [==============================] - 0s 144us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 15/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 16/40\n",
      "300/300 [==============================] - 0s 140us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 17/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 18/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 19/40\n",
      "300/300 [==============================] - 0s 197us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 20/40\n",
      "300/300 [==============================] - 0s 203us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 21/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 22/40\n",
      "300/300 [==============================] - 0s 200us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 23/40\n",
      "300/300 [==============================] - 0s 223us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 24/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 25/40\n",
      "300/300 [==============================] - 0s 210us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 26/40\n",
      "300/300 [==============================] - 0s 190us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 27/40\n",
      "300/300 [==============================] - 0s 150us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 28/40\n",
      "300/300 [==============================] - 0s 173us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 29/40\n",
      "300/300 [==============================] - 0s 177us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 30/40\n",
      "300/300 [==============================] - 0s 177us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 31/40\n",
      "300/300 [==============================] - 0s 190us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 32/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 33/40\n",
      "300/300 [==============================] - 0s 157us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 34/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 35/40\n",
      "300/300 [==============================] - 0s 150us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 36/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 37/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 38/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 39/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 10.9603 - acc: 0.3200\n",
      "Epoch 40/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 10.9603 - acc: 0.3200\n"
     ]
    }
   ],
   "source": [
    "n_epochs = 40\n",
    "hist_00 = model_SGD.fit(X_train, Y_train, epochs=n_epochs, batch_size=32)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.5 - Prediction on new points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_sol(pred):\n",
    "    form = np.argmax(pred)\n",
    "    if(form == 0):\n",
    "        return \"rectangle.\"\n",
    "    elif(form == 1):\n",
    "        return \"disk.\"\n",
    "    else:\n",
    "        return \"triangle.\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.5.1 - A Rectangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: rectangle.\n",
      "The model has predicted a: triangle.\n"
     ]
    }
   ],
   "source": [
    "X_rectangle = generate_a_rectangle()\n",
    "X_rectangle = X_rectangle.reshape(1, X_rectangle.shape[0])\n",
    "y_rect = model_SGD.predict(X_rectangle)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([1,0,0])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_rect)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.5.2 - A disk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: disk.\n",
      "The model has predicted a: triangle.\n"
     ]
    }
   ],
   "source": [
    "X_disk = generate_a_disk()\n",
    "X_disk = X_disk.reshape(1, X_disk.shape[0])\n",
    "y_disk = model_SGD.predict(X_disk)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([0,1,0])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_disk)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2.5.3 - A Triangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: triangle.\n",
      "The model has predicted a: triangle.\n"
     ]
    }
   ],
   "source": [
    "[X_triangle,V_t] = generate_a_triangle()\n",
    "X_triangle = X_triangle.reshape(1, X_triangle.shape[0])\n",
    "y_triangle = model_SGD.predict(X_triangle)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([0,0,1])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_triangle)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model performs poorly. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1.3 - With Adam optmizer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.1 - Buil a model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.models import Sequential\n",
    "\n",
    "model_ADAM = Sequential()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.2 - Add the layers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_2 (Dense)              (None, 3)                 15555     \n",
      "_________________________________________________________________\n",
      "activation_2 (Activation)    (None, 3)                 0         \n",
      "=================================================================\n",
      "Total params: 15,555\n",
      "Trainable params: 15,555\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from keras.layers import Dense, Activation\n",
    "\n",
    "nb_neurons = 3\n",
    "\n",
    "model_ADAM.add(Dense(nb_neurons, input_shape=(fig_size,)))\n",
    "model_ADAM.add(Activation('softmax'))\n",
    "\n",
    "model_ADAM.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.3 - Compiler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "opimizer_choice = \"adam\"\n",
    " \n",
    "model_ADAM.compile(loss='categorical_crossentropy',optimizer=opimizer_choice,metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.4 - Fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/40\n",
      "300/300 [==============================] - 0s 812us/step - loss: 1.6462 - acc: 0.4333\n",
      "Epoch 2/40\n",
      "300/300 [==============================] - 0s 227us/step - loss: 0.8545 - acc: 0.6767\n",
      "Epoch 3/40\n",
      "300/300 [==============================] - 0s 187us/step - loss: 0.3868 - acc: 0.8800\n",
      "Epoch 4/40\n",
      "300/300 [==============================] - 0s 139us/step - loss: 0.2210 - acc: 0.9567\n",
      "Epoch 5/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 0.1823 - acc: 0.9600\n",
      "Epoch 6/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 0.1173 - acc: 0.9867\n",
      "Epoch 7/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 0.0768 - acc: 1.0000\n",
      "Epoch 8/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 0.0601 - acc: 1.0000\n",
      "Epoch 9/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 0.0505 - acc: 1.0000\n",
      "Epoch 10/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 0.0437 - acc: 1.0000\n",
      "Epoch 11/40\n",
      "300/300 [==============================] - 0s 147us/step - loss: 0.0369 - acc: 1.0000\n",
      "Epoch 12/40\n",
      "300/300 [==============================] - 0s 163us/step - loss: 0.0347 - acc: 1.0000\n",
      "Epoch 13/40\n",
      "300/300 [==============================] - 0s 193us/step - loss: 0.0306 - acc: 1.0000\n",
      "Epoch 14/40\n",
      "300/300 [==============================] - 0s 177us/step - loss: 0.0281 - acc: 1.0000\n",
      "Epoch 15/40\n",
      "300/300 [==============================] - 0s 163us/step - loss: 0.0258 - acc: 1.0000\n",
      "Epoch 16/40\n",
      "300/300 [==============================] - 0s 170us/step - loss: 0.0237 - acc: 1.0000\n",
      "Epoch 17/40\n",
      "300/300 [==============================] - 0s 170us/step - loss: 0.0235 - acc: 1.0000\n",
      "Epoch 18/40\n",
      "300/300 [==============================] - 0s 170us/step - loss: 0.0215 - acc: 1.0000\n",
      "Epoch 19/40\n",
      "300/300 [==============================] - 0s 158us/step - loss: 0.0182 - acc: 1.0000\n",
      "Epoch 20/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 0.0171 - acc: 1.0000\n",
      "Epoch 21/40\n",
      "300/300 [==============================] - 0s 237us/step - loss: 0.0158 - acc: 1.0000\n",
      "Epoch 22/40\n",
      "300/300 [==============================] - 0s 195us/step - loss: 0.0145 - acc: 1.0000\n",
      "Epoch 23/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 0.0137 - acc: 1.0000\n",
      "Epoch 24/40\n",
      "300/300 [==============================] - 0s 141us/step - loss: 0.0130 - acc: 1.0000\n",
      "Epoch 25/40\n",
      "300/300 [==============================] - 0s 141us/step - loss: 0.0123 - acc: 1.0000\n",
      "Epoch 26/40\n",
      "300/300 [==============================] - 0s 146us/step - loss: 0.0119 - acc: 1.0000\n",
      "Epoch 27/40\n",
      "300/300 [==============================] - 0s 143us/step - loss: 0.0111 - acc: 1.0000\n",
      "Epoch 28/40\n",
      "300/300 [==============================] - 0s 148us/step - loss: 0.0104 - acc: 1.0000\n",
      "Epoch 29/40\n",
      "300/300 [==============================] - 0s 150us/step - loss: 0.0102 - acc: 1.0000\n",
      "Epoch 30/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 0.0102 - acc: 1.0000\n",
      "Epoch 31/40\n",
      "300/300 [==============================] - 0s 150us/step - loss: 0.0093 - acc: 1.0000\n",
      "Epoch 32/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 0.0088 - acc: 1.0000\n",
      "Epoch 33/40\n",
      "300/300 [==============================] - 0s 150us/step - loss: 0.0086 - acc: 1.0000\n",
      "Epoch 34/40\n",
      "300/300 [==============================] - 0s 153us/step - loss: 0.0079 - acc: 1.0000\n",
      "Epoch 35/40\n",
      "300/300 [==============================] - 0s 140us/step - loss: 0.0077 - acc: 1.0000\n",
      "Epoch 36/40\n",
      "300/300 [==============================] - 0s 154us/step - loss: 0.0075 - acc: 1.0000\n",
      "Epoch 37/40\n",
      "300/300 [==============================] - 0s 136us/step - loss: 0.0070 - acc: 1.0000\n",
      "Epoch 38/40\n",
      "300/300 [==============================] - 0s 104us/step - loss: 0.0069 - acc: 1.0000\n",
      "Epoch 39/40\n",
      "300/300 [==============================] - 0s 192us/step - loss: 0.0066 - acc: 1.0000\n",
      "Epoch 40/40\n",
      "300/300 [==============================] - 0s 173us/step - loss: 0.0063 - acc: 1.0000\n"
     ]
    }
   ],
   "source": [
    "n_epochs = 40\n",
    "hist_01 = model_ADAM.fit(X_train, Y_train, epochs=n_epochs, batch_size=32)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.5 - Prediction on new points"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.5.1 - A Rectangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: rectangle.\n",
      "The model has predicted a: rectangle.\n"
     ]
    }
   ],
   "source": [
    "X_rectangle = generate_a_rectangle()\n",
    "X_rectangle = X_rectangle.reshape(1, X_rectangle.shape[0])\n",
    "y_rect = model_ADAM.predict(X_rectangle)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([1,0,0])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_rect)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.5.2 - A Disk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: disk.\n",
      "The model has predicted a: disk.\n"
     ]
    }
   ],
   "source": [
    "X_disk = generate_a_disk()\n",
    "X_disk = X_disk.reshape(1, X_disk.shape[0])\n",
    "y_disk = model_ADAM.predict(X_disk)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([0,1,0])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_disk)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3.5.3 - A Triangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The true value is: triangle.\n",
      "The model has predicted a: triangle.\n"
     ]
    }
   ],
   "source": [
    "[X_triangle,V_t] = generate_a_triangle()\n",
    "X_triangle = X_triangle.reshape(1, X_triangle.shape[0])\n",
    "y_triangle = model_SGD.predict(X_triangle)\n",
    "\n",
    "print(\"The true value is: {}\".format(print_sol([0,0,1])))\n",
    "print(\"The model has predicted a: {}\".format(print_sol(y_triangle)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "No way. For a 2 layer NN ADAM optmizer overperforms by far SGD for:\n",
    "- The loss function value: 1 order of magnitude of difference\n",
    "- The Accuracy: 64% gap\n",
    "\n",
    "The following plots show the different behaviour of those two factors:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.subplots(1,2, figsize=(5,5))\n",
    "\n",
    "plt.subplot(121)\n",
    "plt.plot(hist_00.history['loss'])\n",
    "plt.plot(hist_01.history['loss'])\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.title(\"Loss function\")\n",
    "\n",
    "plt.subplot(122)\n",
    "plt.plot(hist_00.history['acc'])\n",
    "plt.plot(hist_01.history['acc'])\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.title(\"Accuracy\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1.4 - Coefficients' viasulization: SGD vs ADAM"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "General considerations:\n",
    "    \n",
    "weigths are proportional to the brightness of the pixels they are associated with.\n",
    "\n",
    "The higher the weigth the brigher the pixel that is associated with."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.4.1 - SGD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Weights for: TRIANGLE')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(1,3, figsize=(15,15))\n",
    "\n",
    "FIGSIZE = 72\n",
    "\n",
    "w_SGD = model_SGD.get_weights()\n",
    "w_SGD_rectangle = w_SGD[0][:,0]\n",
    "w_SGD_disk = w_SGD[0][:,1]\n",
    "w_SGD_triangle = w_SGD[0][:,2]\n",
    "\n",
    "plt.subplot(131)\n",
    "plt.imshow(w_SGD_rectangle.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: RECTANGLE\")\n",
    "\n",
    "plt.subplot(132)\n",
    "plt.imshow(w_SGD_disk.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: DISK\")\n",
    "\n",
    "plt.subplot(133)\n",
    "plt.imshow(w_SGD_triangle.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: TRIANGLE\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is an interisting result:\n",
    "\n",
    "    In sec. 1.2.5.1 - 1.2.5.3 all the shapes are classified as a triangle. This is due to the nature of weights values which are similar to the ones of the triangle of sec 1.4.1 and 1.4.2."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.4.2 - SGD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.071630955\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(1,3, figsize=(15,15))\n",
    "\n",
    "FIGSIZE = 72\n",
    "\n",
    "w_ADAM = model_ADAM.get_weights()\n",
    "w_ADAM_rectangle = w_ADAM[0][:,0]\n",
    "w_ADAM_disk = w_ADAM[0][:,1]\n",
    "w_ADAM_triangle = w_ADAM[0][:,2]\n",
    "\n",
    "plt.subplot(131)\n",
    "plt.imshow(w_ADAM_rectangle.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: RECTANGLE\")\n",
    "\n",
    "plt.subplot(132)\n",
    "plt.imshow(w_ADAM_disk.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: DISK\")\n",
    "\n",
    "plt.subplot(133)\n",
    "plt.imshow(w_ADAM_triangle.reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Weights for: TRIANGLE\")\n",
    "\n",
    "print(max(w_ADAM_triangle))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we see that the network gives more importance to the weights that corresponds to the feature that discriminate the most \n",
    "each shape."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2 - A More Difficult Classification Problem"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.0 - Generate data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating data:\n",
      "0\n",
      "10\n",
      "20\n",
      "30\n",
      "40\n",
      "50\n",
      "60\n",
      "70\n",
      "80\n",
      "90\n",
      "100\n",
      "110\n",
      "120\n",
      "130\n",
      "140\n",
      "150\n",
      "160\n",
      "170\n",
      "180\n",
      "190\n",
      "200\n",
      "210\n",
      "220\n",
      "230\n",
      "240\n",
      "250\n",
      "260\n",
      "270\n",
      "280\n",
      "290\n",
      "300\n",
      "310\n",
      "320\n",
      "330\n",
      "340\n",
      "350\n",
      "360\n",
      "370\n",
      "380\n",
      "390\n",
      "400\n",
      "410\n",
      "420\n",
      "430\n",
      "440\n",
      "450\n",
      "460\n",
      "470\n",
      "480\n",
      "490\n",
      "Creating data:\n",
      "0\n",
      "10\n",
      "20\n",
      "30\n",
      "40\n",
      "50\n",
      "60\n",
      "70\n",
      "80\n",
      "90\n",
      "100\n",
      "110\n",
      "120\n",
      "130\n",
      "140\n",
      "150\n",
      "160\n",
      "170\n",
      "180\n",
      "190\n"
     ]
    }
   ],
   "source": [
    "n_tr_2 = 500\n",
    "noise_2 = 20\n",
    "[X_2_train, Y_2_train] = generate_dataset_classification(n_tr_2, noise_2, True)\n",
    "# Convert into categorical format\n",
    "Y_2_train = np_utils.to_categorical(Y_2_train, 3)\n",
    "\n",
    "n_test_2 = 200\n",
    "[X_2_test, Y_2_test] = generate_dataset_classification(n_test_2, noise_2, True)\n",
    "# Convert into categorical format\n",
    "Y_2_test = np_utils.to_categorical(Y_2_test, 3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1 -  Build a model - add layers - compiler (SGD) - fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_3 (Dense)              (None, 3)                 15555     \n",
      "_________________________________________________________________\n",
      "activation_3 (Activation)    (None, 3)                 0         \n",
      "=================================================================\n",
      "Total params: 15,555\n",
      "Trainable params: 15,555\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Epoch 1/50\n",
      "500/500 [==============================] - 0s 470us/step - loss: 8.4633 - acc: 0.3760\n",
      "Epoch 2/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 3/50\n",
      "500/500 [==============================] - 0s 164us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 4/50\n",
      "500/500 [==============================] - 0s 170us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 5/50\n",
      "500/500 [==============================] - 0s 186us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 6/50\n",
      "500/500 [==============================] - 0s 210us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 7/50\n",
      "500/500 [==============================] - 0s 208us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 8/50\n",
      "500/500 [==============================] - 0s 186us/step - loss: 10.2511 - acc: 0.36400s - loss: 9.9822 - acc: 0.380\n",
      "Epoch 9/50\n",
      "500/500 [==============================] - 0s 174us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 10/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 11/50\n",
      "500/500 [==============================] - 0s 163us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 12/50\n",
      "500/500 [==============================] - 0s 158us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 13/50\n",
      "500/500 [==============================] - 0s 156us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 14/50\n",
      "500/500 [==============================] - 0s 178us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 15/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 16/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 17/50\n",
      "500/500 [==============================] - 0s 202us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 18/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 19/50\n",
      "500/500 [==============================] - 0s 157us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 20/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 21/50\n",
      "500/500 [==============================] - 0s 162us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 22/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 23/50\n",
      "500/500 [==============================] - 0s 170us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 24/50\n",
      "500/500 [==============================] - 0s 182us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 25/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 26/50\n",
      "500/500 [==============================] - 0s 170us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 27/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 28/50\n",
      "500/500 [==============================] - 0s 166us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 29/50\n",
      "500/500 [==============================] - 0s 178us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 30/50\n",
      "500/500 [==============================] - 0s 174us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 31/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 32/50\n",
      "500/500 [==============================] - 0s 204us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 33/50\n",
      "500/500 [==============================] - 0s 208us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 34/50\n",
      "500/500 [==============================] - 0s 190us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 35/50\n",
      "500/500 [==============================] - 0s 184us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 36/50\n",
      "500/500 [==============================] - 0s 220us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 37/50\n",
      "500/500 [==============================] - 0s 184us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 38/50\n",
      "500/500 [==============================] - 0s 192us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 39/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 40/50\n",
      "500/500 [==============================] - 0s 192us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 41/50\n",
      "500/500 [==============================] - 0s 188us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 42/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 43/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 44/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 45/50\n",
      "500/500 [==============================] - 0s 186us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 46/50\n",
      "500/500 [==============================] - 0s 190us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 47/50\n",
      "500/500 [==============================] - 0s 218us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 48/50\n",
      "500/500 [==============================] - 0s 188us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 49/50\n",
      "500/500 [==============================] - 0s 186us/step - loss: 10.2511 - acc: 0.3640\n",
      "Epoch 50/50\n",
      "500/500 [==============================] - 0s 182us/step - loss: 10.2511 - acc: 0.3640\n"
     ]
    }
   ],
   "source": [
    "from keras import Sequential\n",
    "from keras.layers import Dense, Activation\n",
    "from keras.optimizers import SGD\n",
    "\n",
    "model_2_SGD = Sequential()\n",
    "\n",
    "nb_neurons = 3\n",
    "\n",
    "model_2_SGD.add(Dense(nb_neurons, input_shape=(fig_size,)))\n",
    "model_2_SGD.add(Activation('softmax'))\n",
    "\n",
    "model_2_SGD.summary()\n",
    "\n",
    "\n",
    "lr_sgd = 0.01\n",
    "decay_sgd = 1e-6\n",
    "momentum_sgd = 0.9\n",
    "nesterov_sgd = True\n",
    "\n",
    "sgd = SGD(lr = lr_sgd, decay = 1e-6, momentum = momentum_sgd, nesterov = nesterov_sgd)\n",
    "\n",
    "n_epochs = 50\n",
    "\n",
    "model_2_SGD.compile(loss='categorical_crossentropy',optimizer=sgd, metrics=['accuracy'])\n",
    "history_2 = model_2_SGD.fit(X_2_train, Y_2_train, epochs=n_epochs, batch_size=32)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.1 - Plot "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.1.1 - Loss function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(history_2.history['loss'])\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.1.2 - Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history_2.history['acc'])\n",
    "plt.title('model accuracy')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.2 - Prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loss value on Test Dataset: 10.960304794311524\n",
      "Accuracy on Test Dataset: 32.0 %\n"
     ]
    }
   ],
   "source": [
    "evaluation_2_SGD = model_2_SGD.evaluate(X_2_test, Y_2_test, verbose=0)\n",
    "print(\"Loss value on Test Dataset: {}\".format(evaluation_2_SGD[0]))\n",
    "print(\"Accuracy on Test Dataset: {} %\".format(round(evaluation_2_SGD[1]*100,2)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This model is worthless. Its predictions are equivalent to pick one shape at random and assign it to each data.\n",
    "In sec. 2.2 we will see how to get better performances."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.2  Build a model - add layers - compiler (ADAM) - fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_4 (Dense)              (None, 3)                 15555     \n",
      "_________________________________________________________________\n",
      "activation_4 (Activation)    (None, 3)                 0         \n",
      "=================================================================\n",
      "Total params: 15,555\n",
      "Trainable params: 15,555\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Epoch 1/50\n",
      "500/500 [==============================] - 0s 664us/step - loss: 1.6572 - acc: 0.3420\n",
      "Epoch 2/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 0.9978 - acc: 0.4660\n",
      "Epoch 3/50\n",
      "500/500 [==============================] - 0s 200us/step - loss: 0.9563 - acc: 0.5180\n",
      "Epoch 4/50\n",
      "500/500 [==============================] - 0s 225us/step - loss: 0.9231 - acc: 0.5440\n",
      "Epoch 5/50\n",
      "500/500 [==============================] - 0s 198us/step - loss: 0.8266 - acc: 0.5640\n",
      "Epoch 6/50\n",
      "500/500 [==============================] - 0s 224us/step - loss: 0.8682 - acc: 0.5780\n",
      "Epoch 7/50\n",
      "500/500 [==============================] - 0s 250us/step - loss: 1.1608 - acc: 0.5100\n",
      "Epoch 8/50\n",
      "500/500 [==============================] - 0s 232us/step - loss: 0.8696 - acc: 0.5940\n",
      "Epoch 9/50\n",
      "500/500 [==============================] - 0s 228us/step - loss: 0.7682 - acc: 0.6200\n",
      "Epoch 10/50\n",
      "500/500 [==============================] - 0s 234us/step - loss: 0.8198 - acc: 0.6080\n",
      "Epoch 11/50\n",
      "500/500 [==============================] - 0s 240us/step - loss: 0.7050 - acc: 0.6520\n",
      "Epoch 12/50\n",
      "500/500 [==============================] - 0s 214us/step - loss: 0.7455 - acc: 0.6560\n",
      "Epoch 13/50\n",
      "500/500 [==============================] - 0s 190us/step - loss: 0.8860 - acc: 0.5820\n",
      "Epoch 14/50\n",
      "500/500 [==============================] - 0s 190us/step - loss: 0.7499 - acc: 0.6460\n",
      "Epoch 15/50\n",
      "500/500 [==============================] - 0s 199us/step - loss: 0.8023 - acc: 0.6400\n",
      "Epoch 16/50\n",
      "500/500 [==============================] - 0s 255us/step - loss: 0.6853 - acc: 0.7000\n",
      "Epoch 17/50\n",
      "500/500 [==============================] - 0s 284us/step - loss: 0.6623 - acc: 0.6900\n",
      "Epoch 18/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.5877 - acc: 0.7340\n",
      "Epoch 19/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.6082 - acc: 0.7580\n",
      "Epoch 20/50\n",
      "500/500 [==============================] - 0s 192us/step - loss: 0.5581 - acc: 0.7840\n",
      "Epoch 21/50\n",
      "500/500 [==============================] - 0s 190us/step - loss: 0.5789 - acc: 0.7500\n",
      "Epoch 22/50\n",
      "500/500 [==============================] - 0s 198us/step - loss: 0.6049 - acc: 0.7180\n",
      "Epoch 23/50\n",
      "500/500 [==============================] - 0s 202us/step - loss: 0.5208 - acc: 0.7780\n",
      "Epoch 24/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.6687 - acc: 0.6760\n",
      "Epoch 25/50\n",
      "500/500 [==============================] - 0s 208us/step - loss: 0.5988 - acc: 0.7420\n",
      "Epoch 26/50\n",
      "500/500 [==============================] - 0s 186us/step - loss: 0.5192 - acc: 0.7780\n",
      "Epoch 27/50\n",
      "500/500 [==============================] - 0s 200us/step - loss: 0.4861 - acc: 0.8080\n",
      "Epoch 28/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.5192 - acc: 0.7800\n",
      "Epoch 29/50\n",
      "500/500 [==============================] - 0s 226us/step - loss: 0.4718 - acc: 0.8240\n",
      "Epoch 30/50\n",
      "500/500 [==============================] - 0s 228us/step - loss: 0.5068 - acc: 0.7600\n",
      "Epoch 31/50\n",
      "500/500 [==============================] - 0s 198us/step - loss: 0.4744 - acc: 0.8200\n",
      "Epoch 32/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 0.4463 - acc: 0.8680\n",
      "Epoch 33/50\n",
      "500/500 [==============================] - 0s 218us/step - loss: 0.4572 - acc: 0.8080\n",
      "Epoch 34/50\n",
      "500/500 [==============================] - 0s 230us/step - loss: 0.4204 - acc: 0.8980\n",
      "Epoch 35/50\n",
      "500/500 [==============================] - 0s 212us/step - loss: 0.4710 - acc: 0.8000\n",
      "Epoch 36/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.4171 - acc: 0.8760\n",
      "Epoch 37/50\n",
      "500/500 [==============================] - 0s 196us/step - loss: 0.4284 - acc: 0.8540\n",
      "Epoch 38/50\n",
      "500/500 [==============================] - 0s 198us/step - loss: 0.4383 - acc: 0.8300\n",
      "Epoch 39/50\n",
      "500/500 [==============================] - 0s 216us/step - loss: 0.3856 - acc: 0.8880\n",
      "Epoch 40/50\n",
      "500/500 [==============================] - 0s 232us/step - loss: 0.4028 - acc: 0.8580\n",
      "Epoch 41/50\n",
      "500/500 [==============================] - 0s 220us/step - loss: 0.5332 - acc: 0.7620 0s - loss: 0.5301 - acc: 0.773\n",
      "Epoch 42/50\n",
      "500/500 [==============================] - 0s 206us/step - loss: 0.4690 - acc: 0.7740\n",
      "Epoch 43/50\n",
      "500/500 [==============================] - 0s 194us/step - loss: 0.3948 - acc: 0.8620\n",
      "Epoch 44/50\n",
      "500/500 [==============================] - 0s 208us/step - loss: 0.5340 - acc: 0.7460\n",
      "Epoch 45/50\n",
      "500/500 [==============================] - 0s 198us/step - loss: 0.4967 - acc: 0.7980\n",
      "Epoch 46/50\n",
      "500/500 [==============================] - 0s 206us/step - loss: 0.4073 - acc: 0.8520\n",
      "Epoch 47/50\n",
      "500/500 [==============================] - 0s 224us/step - loss: 0.3779 - acc: 0.8620\n",
      "Epoch 48/50\n",
      "500/500 [==============================] - 0s 220us/step - loss: 0.3784 - acc: 0.8820\n",
      "Epoch 49/50\n",
      "500/500 [==============================] - 0s 210us/step - loss: 0.3478 - acc: 0.9200\n",
      "Epoch 50/50\n",
      "500/500 [==============================] - 0s 222us/step - loss: 0.3398 - acc: 0.9140\n"
     ]
    }
   ],
   "source": [
    "from keras import Sequential\n",
    "from keras.layers import Dense, Activation\n",
    "from keras.optimizers import SGD\n",
    "\n",
    "model_2_ADAM = Sequential()\n",
    "\n",
    "nb_neurons = 3\n",
    "\n",
    "model_2_ADAM.add(Dense(nb_neurons, input_shape=(fig_size,)))\n",
    "model_2_ADAM.add(Activation('softmax'))\n",
    "\n",
    "model_2_ADAM.summary()\n",
    "\n",
    "opimizer_choice = \"adam\"\n",
    " \n",
    "model_2_ADAM.compile(loss='categorical_crossentropy',optimizer=opimizer_choice,metrics=['accuracy'])\n",
    "\n",
    "n_epochs = 50\n",
    "history_3 = model_2_ADAM.fit(X_2_train, Y_2_train, epochs=n_epochs, batch_size=32)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2.1 - Plot "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2.1.1 - Loss function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEKCAYAAAD9xUlFAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4wLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvqOYd8AAAIABJREFUeJzt3Xd8leX9//HX52SQAQmQhBVGmLJlBEVQpgNxW6viqtZKraP2Z1urta3W1q92uuqoq1pnbd3iBgVRAcOQFTaETULCCITs6/fHOTmG7JCcnCTn/Xw8eIRzn/vc57o1nPe5r+u6P5c55xAREQHwBLsBIiLSfCgURETET6EgIiJ+CgUREfFTKIiIiJ9CQURE/BQKIiLip1AQERE/hYKIiPiFB7sB9ZWYmOhSUlKC3QwRkRZl8eLFe51zSbXt1+JCISUlhbS0tGA3Q0SkRTGzjLrsp+4jERHxUyiIiIifQkFERPwUCiIi4qdQEBERP4WCiIj4KRRERMQvZEJhze6D/PWjteQcLgx2U0REmq2QCYUtew/zj882sPtAfrCbIiLSbIVMKMRFRQBwML8oyC0REWm+QicUor2hcOCIQkFEpDqhEwplVwoKBRGRaoVOKER7a/8dzC8OcktERJqvgIWCmT1rZplmtrKGfSaZ2TIzW2VmcwPVFoC2bXyhoCsFEZFqBfJK4TlgWnVPmll74DHgXOfcEOD7AWwL4WEe2rYJ10CziEgNAhYKzrl5QE4Nu1wGvOGc2+rbPzNQbSkTFxXOwSPqPhIRqU4wxxQGAB3M7HMzW2xmVwX6DeOiI3SlICJSg2CuvBYOjAamAtHA12a2wDm3ruKOZjYTmAnQs2fPY37DuOgIjSmIiNQgmFcK24EPnXOHnXN7gXnA8VXt6Jx70jmX6pxLTUqqdYnRasVFRWj2kYhIDYIZCm8Dp5hZuJnFACcC6YF8w7jocF0piIjUIGDdR2b2CjAJSDSz7cBdQASAc+4J51y6mX0ILAdKgaedc9VOX20M3isFhYKISHUCFgrOuRl12OcvwF8C1YaK4qIjOFRQTGmpw+OxpnpbEZEWI2TuaAbvlFTnILdA4woiIlUJrVCIVv0jEZGahFYoqHy2iEiNQisUfEXxVD5bRKRqoRUK/vLZGlMQEalKSIVCfLS6j0REahJSoaCFdkREahZSodAuKhwzLbQjIlKdkAoFj8e8ayroSkFEpEohFQqgUhciIjUJvVCIjtDsIxGRaoReKERpSU4RkeqEXihooR0RkWqFXihERZCr2UciIlUKvVDQQjsiItUKvVCIiiC3oJiSUhfspoiINDuhFwq+UheH1IUkIlJJ6IVClLdSqmYgiYhUFnqh4LtSUPlsEZHKQi8UVBRPRKRaIRcKKp8tIlK9gIWCmT1rZplmtrKW/caYWYmZXRSotpRXtvqaSl2IiFQWyCuF54BpNe1gZmHAn4CPAtiOo8TpSkFEpFoBCwXn3Dwgp5bdbgZeBzID1Y6K2kb61lTQmIKISCVBG1Mws2TgAuCJpnxfj8do1yZcC+2IiFQhmAPNDwK/cs6V1Lajmc00szQzS8vKymrwG6sonohI1cKD+N6pwKtmBpAITDezYufcWxV3dM49CTwJkJqa2uD6FFpoR0SkakELBedc77K/m9lzwHtVBUIgeIviqftIRKSigIWCmb0CTAISzWw7cBcQAeCca9JxhIrioiLYmpMXzCaIiDRLAQsF59yMeux7daDaURWNKYiIVC3k7miGsjEFdR+JiFQUmqEQHc6hgmKKS0qD3RQRkWYlJEOhrP7RoQJdLYiIlBeSofBdpVSFgohIeaEZClpTQUSkSqEZClp9TUSkSqEZCtFaaEdEpCqhHQq6UhAROUpohkKUFtoREalKSIZCbGQ4HtOVgohIRSEZCh6P0S5KpS5ERCoKyVAAX6VUlboQETlK6IaCrhRERCoJ7VDQmIKIyFFCNxS00I6ISCUhGwrx0bpSEBGpKGRDQWMKIiKVhW4oREdwuLBEayqIiJQTuqHgu6s5V9NSRUT8QjcUVD5bRKSS0A2FKBXFExGpKGChYGbPmlmmma2s5vnLzWy5789XZnZ8oNpSle/KZ6v7SESkTCCvFJ4DptXw/GZgonNuOPAH4MkAtqWSuGgttCMiUlF4oA7snJtnZik1PP9VuYcLgO6BaktVvlunWaEgIlKmuYwpXAt80JRvqIV2REQqC9iVQl2Z2WS8oXByDfvMBGYC9OzZs1HeNzYyzLumgsYURET8gnqlYGbDgaeB85xz2dXt55x70jmX6pxLTUpKaqz3Jk6lLkREjhK0UDCznsAbwJXOuXXBaEN8tEpdiIiUF7DuIzN7BZgEJJrZduAuIALAOfcE8DsgAXjMzACKnXOpgWpPVbzls9V9JCJSJpCzj2bU8vyPgB8F6v3rwls+W1cKIiJlmsvso6AI9kI7+UUlTPrLZ3y6ek/Q2iAiUp5CIYizjzbvPcyW7Dy+3lTtGLuISJMK7VCIDg/qlcKWvYcByMg+HLQ2iIiUF9qhEBVBXmEJRUFaU2FLdt5RP0VEgi20QyE6uKUuyq4QtmbnUVLqgtIGEZHyQjwUyoriBWdcYYsvFApLStl14EhQ2iAiUl5oh0KQi+JlZOeR3D7a/3cRkWAL7VAIYlG8I4Ul7DqQz4QB3rIdm/dqsFlEgi+0QyEqeAvtbM3xXhmM7dORNuEezUASkWYhtEMhiAvtlI0n9ElsS6+EGDbvVfeRiARfSIdCfBBnH5VdGfRMiCElIVZXCiLSLIR0KERHhBHusSBdKeTRMTaS+OgIUhJjycjJo1TTUkUkyEI6FPxrKgRhTGHL3sP0SogBoFdCDIXFpew6mN/k7RARKS+kQwEgLio4pS4ysvNISYgFoLfvZ4ZmIIlIkCkUgrDQTn5RCTsPHPGHQq9E78/NGlcQkSBTKARhoZ3t+/JwDlISvd1HXeOiiAz36AY2EQk6hUIQFtopm37ay3el4PEYvTrG+KumiogEi0IhCAvtlE0/TfENNIM3ILao+0hEgqxOoWBmt5hZnHk9Y2ZLzOz0QDeuKQRj9tGW7MPER0fQPibSv613YgwZ2ZqWKiLBVdcrhR865w4CpwNJwDXA/QFrVROKiwrnSFEJhcVNt6ZCRnYeKb7B5TK9EmIpKC5lt6alikgQ1TUUzPdzOvAv59y35ba1aMEoircl+/BRXUeAfyaSupBEJJjqGgqLzexjvKHwkZm1A2r8am1mz5pZppmtrOZ5M7OHzWyDmS03s1H1a3rjaOry2YXFpezYd8Q/yFymbCaSZiCJSDDVNRSuBW4Hxjjn8oAIvF1INXkOmFbD82cC/X1/ZgKP17EtjaqpF9rZti+PUkelK4Wu8dFEhnk0A0lEgqquoXASsNY5t9/MrgB+Axyo6QXOuXlATg27nAf823ktANqbWdc6tqfRNHVRPP/MowpjCmEeo2dCjLqPRCSo6hoKjwN5ZnY8cBuQAfy7ge+dDGwr93i7b1uTKus+2pdX2CTvt8V3j0JKhe4j77YY//MiIsFQ11Aods45vN/uH3LOPQS0a+B7VzVQXeV8TDObaWZpZpaWlZXVwLc9Wrf20XSIieDPH65lW07gP5C3ZB+mXVQ4HWIiKj3XKyGWjJzDmpYqIkFT11DINbM7gCuBWWYWhndcoSG2Az3KPe4O7KxqR+fck865VOdcalJSUgPf9mixbcJ54doTOVRQzKVPLgh4MGzxFcIzq5yJKYmx5BeVkplbENA2iIhUp66hcAlQgPd+hd14u3n+0sD3fge4yjcLaSxwwDm3q4HHPCZDk+N56UdNEwwZ2d+VzK6obPBZ6zWLSLDUKRR8QfASEG9mZwP5zrkaxxTM7BXga+A4M9tuZtea2fVmdr1vl/eBTcAG4CnghmM9icbQFMFQVFLK9n1H6J1YeTwBvhtn0CpsIhIsdS1zcTGwCPg+cDGw0Mwuquk1zrkZzrmuzrkI51x359wzzrknnHNP+J53zrkbnXN9nXPDnHNpDT2ZhioLhtz8ImY81fjBsGPfEUpKXaV7FMp0ax9NRJixRfcqiEiQ1LX76E689yj8wDl3FXAC8NvANSt4vMEwloNHGj8YNldRCK+8MI/RQ9VSRSSI6hoKHudcZrnH2fV4bYszrPt3wXD+o1+ycFN2oxy3bGW16q4UwLsKm+5VEJFgqesH+4dm9pGZXW1mVwOz8I4JtFrDusfzxg3jiY+O4PKnF/L8V1vwzso9dluy84iNDCOxbWS1+/RKiCUjO6/B7yUicizqOtD8S+BJYDhwPPCkc+5XgWxYc9CvU1veumk8Ewckcdc7q/jl/5aTX1RyzMfLyD5MSmLV01HL9E6M4UhRiaalikhQhNd1R+fc68DrAWxLsxQXFcFTV6Xy4KfreHjOBtbvyeWJK0fTNT663sfKyM5jUNe4Gvcp61rasvcwneOijqnNIiLHqsYrBTPLNbODVfzJNbODTdXIYPN4jFtPP45/XjmaDZmHOOeR+SzOqKmsU2XFJaVszcmr9h6FMiqhLSLBVGMoOOfaOefiqvjTzjlX81feVuiMIV1468bxxLYJ54aXllBUUveFeXbuz6e41FVZ86i8bu2jNC1VRIKm1c4gCpT+ndtx9zlD2HOwgA9W7q7z68q++dd2pRAe5qFHB01LFZHgUCgcg4kDkkhJiOH5r7bU+TVldylXdzdzeSmJsbpSEJGgUCgcA4/HuOqkFBZn7GP59v11es3mvXlER4SR1K5Nrfv2SoghI/uwpqWKSJNTKByji1K7ExsZxnN1vFooK4RX03TUMikJseQVlpClaaki0sQUCscoLiqCi0Z3571vd9Xpw3tL9uFaB5nLlK3KFqwupMc/38jLC7cG5b1FJLgUCg1w1bgUCktKeWVRzR+gJaWObTlH6JVY8yBzmbLaSMEYbM4vKuHh2et5aPY6LfYjEoIUCg3QN6ktEwYk8eKCjBqnp+46cITCklJ61/FKIbl9NOEeC8q9Cgs2ZXOkqIQ9BwtYubPGZbhFpBVSKDTQNeNSyMyteXrqG0t2AHWbeQTeaam9E2NZsnVfo7SxPj5bk0mbcA8eg09X72ny9xeR4FIoNFDZ9NTnvtxc5fNPztvI3z9Zx9nDuzImpWOdj3veiG4s2JTDxqxDjdXUWjnnmL0mk1P6J5Ka0pFP0jNrf5GItCoKhQbyeIwfjEthydb9fLvt6OmpT3+xif97fw1nDe/Kg5eMwOOpfeZRmYvH9CDcY0064Lsh8xDb9x1h8sBOnDaoM+m7DrJ9n+6XEAklCoVGcNFo7/TU8jezPf3FJv44K52zhnXloUtGEB5Wv//UndpFccaQLvxv8fYGVWatjzlrvFcGUwZ24tTBnQGYrasFkZCiUGgE7cqmpy73Tk99Zv5m/jgrnenDuvDgpfUPhDKXj+3JgSNFvLd8VyO3uGqz12QyqGscXeOj6Z0YS9+kWD5N17iCSChRKDSSsump1/07jT+8t5ozh3bhoUtHEnGMgQBwUp8E+iTF8tLCjEZsadUO5BWxOGMfUwYm+bedOqgzCzZlk5tfFPD3F5HmQaHQSPomtWXigCSWbdvPtCFdeHhGwwIBwMy4/MReLN26n1UBnh46d30WJaWOKQM7+7edOrgzRSWOeev2BvS9RaT5CGgomNk0M1trZhvM7PYqnu9pZp+Z2VIzW25m0wPZnkD73TmD+eUZx/HIZQ0PhDLfG5VMm3APL9Uy4Dw7fQ8/fiHtmMcfPluTScfYSEb0aO/fNqpnBzrERKgLSSSEBCwUzCwMeBQ4ExgMzDCzwRV2+w3wmnNuJHAp8Fig2tMU+ia15cbJ/RotEADax0RyzvHdeGvpjmq7cdbuzuXmV5by0ao9x/QBXlLq+HxtJpMGJBFWboZUmMeYMrAzc9ZkUlyPtSNEpOUK5JXCCcAG59wm51wh8CpwXoV9HFC2WE88sDOA7WmxLj+xJ3mFJby1dEel5w7kFTHzhTTatgknqV2bKvepzbJt+9iXV8TkgZ0qPXfa4E4cOFJEWkb1N9I551S8T6SVCGQoJAPbyj3e7ttW3t3AFWa2HXgfuDmA7WmxRvRoz5Bucby0cOtR5bRLSh03v7qUnfuP8PgVo7lwZDKfr80i53BhvY4/Z00mYR5jwoCkSs+d0j+JyDBPjXc3/+G9dMbdP5sNmbn1el8RaX4CGQpV3alVscLaDOA551x3YDrwgplVapOZzTSzNDNLy8rKCkBTm7eyAec1u3NZXO4b+18+Wsu8dVncc95QRvfqwPkjkykudcxaXr8LrtnpmaT26kB8dESl52LbhHNS3wQ+Sd9T5foOby3dwbNfbqaoxPHmMVyliEjzEshQ2A70KPe4O5W7h64FXgNwzn0NRAGJFQ/knHvSOZfqnEtNSqr8bTYUnDeiG23bhPsHnN9bvpMn5m7kshN7MuOEngAM6hrHwC7teKMeH8479x9hze5cplTRdVTm1MGdycjOq1RyY/XOg9z+xnJOSOnIuL4JvL1spxYGEmnhAhkK3wD9zay3mUXiHUh+p8I+W4GpAGY2CG8ohN6lQB3EtgnngpHJzFq+i6827OWX/11Oaq8O3H3OkKP2u2BkMku37q9z2e3P1nrvWJ46qIZQ8D33abm7m/fnFfLjF9OIj47gH5eP5HujurN935GgFPETkcYTsFBwzhUDNwEfAel4ZxmtMrN7zOxc324/B64zs2+BV4Crnb5qVuvysT0pLCnlymcXERcdzmNXjCIy/Oj/heeO6IYZvLWsblcLc9Iz6dExmr5Jbavdp2t8NEOT4/zjCiWljlteXcbuA/k8fsVob0mOoV1oE+7hraWaKyDSkgX0PgXn3PvOuQHOub7OuXt9237nnHvH9/fVzrnxzrnjnXMjnHMfB7I9Ld3ALnGMSelAmBlP+D6MK+oaH81JfRJ4c+mOWrty8otK+HLjXqYO7FzrMqFTB3Zm8dZ9ZB8q4KFP1zF3XRZ3nzuEUT07ANC2TTinDu7MrBW7alxbQkSaN93R3MI8etko3r5pPCN9H8ZVuWBkMhnZeSytULW1oq83ZpNfVFrlVNSKThvcGefgd++s4uE5G7g4tTuX+cYyypw/Ipmcw4XMX687oEVaKoVCC9MpLopBXeNq3Geavyun5i6kOWsyiY4I48Teta/zMKRbHF3iopi1fBfDu8dzz3lDK11dTByQRHx0RJ27rkSk+VEotELtoiI4bXBn3v12J4XFVXflHCksYXb6Hk7un0hURFitxzQzzh7elcS2kTx2+agqXxMZ7mH6sK58vGoPeYXFDT4PEWl6CoVW6oKRyezLK2LeusqTuQ4XFHPNc4vYfTC/UhdQTW4/cyBzfzmZ7h1iqt3n/BHdOFJUwidaylOkRVIotFITBiTRMTaSNyt05RwqKObqfy1i0eYcHrhkRJ3GE8qEh3mIbRNe4z5jUjrSLT6Kt5dpFpJIS6RQaKUiwjycM7wrn67ew0FfIb2D+UVc+cxClmzdzyMzRnHeiIpVRxrO4zHOGdGNeevqX25DRIJPodCKnT8ymYLiUj5csZsDeUVc+fRCVu44wKOXjeKs4V0D974jjq3chogEn0KhFRvRoz29E2N5adFWLnt6Aem7cnniitFMG9oloO87sEs7BnRuqy4kkRZIodCKmRnnj0jm2237WZ95iCevGs3UQZ1rf2EjvO95I5JJy9jHtpy8gL+fiDQehUIrd8mYHozt05FnfzCGScfVfVC5oc49vhsA73yrqwWRlkSh0Mp1iY/i1ZkncXL/SsVnA6pHxxhSe3Xg7WW1l9sQkeZDoSABc97IZNbtOcSHK3cHuykiUkcKBQmYc4d3o09SLD95aQlXPrOQ9F0Hg90kEamFQkECJj4mgg9vmcBvzx7M8u0HmP7wF9z2v2/ZczA/2E2rl5JSp3suJGQoFCSgIsM9XHtyb+b9cjLXju/Nm0t3MOkvn/PAJ+s4UlgS7ObVybPzNzPu/tlsruPCRSItmUJBmkR8TAS/OXsws2+dxJRBnXho9np+/eaKYDerTj5evZv8olLueXdVsJsiEnAKBWlSPRNiePSyUdwwqS9vLt3B8u01r/kQbAfzi1iydT/J7aP5bG0Ws9NV6E9aN4WCBMUNk/uR2DaSP85Kb9ZTVr/asJeSUsdfLhpOv05t+f27q8kvahndXiLHQqEgQdG2TTg/O3UAizbnNOsy23PXZdG2TThjenfk7nOGsDUnj6fmbQp2s0QCRqEgQXPpmB70TYrl/g/WNMt1nZ1zzFu3l/H9EogI83By/0SmD+vCo59vYMf+I8FunkhAKBQkaMLDPPx6+iA27T3MK4u2Brs5lWzMOsSO/UeYOOC78iB3njUYgHtnrQ5Ws0QCKqChYGbTzGytmW0ws9ur2ediM1ttZqvM7OVAtkeanykDO3FSnwQe/HS9f92H5mLuur0ATBjwXYmQ5PbR3DipH++v2M2XG/YGq2kiAROwUDCzMOBR4ExgMDDDzAZX2Kc/cAcw3jk3BPhZoNojzZOZcedZg8g5XMjjn2+sdj/nHAXFTTvAO3ddFn2TYistP3rdhD707BjDXe+sapbdXiINEcgrhROADc65Tc65QuBV4LwK+1wHPOqc2wfgnMsMYHukmRqaHM+FI5N5Zv5mtu87utR2aanjveU7mfbgF5x035wG30CWX1TC019sYnHGvlr3W7gp+6iuozJREWHcdc5gNmQe4vmvtjSoPSLNTSBDIRnYVu7xdt+28gYAA8zsSzNbYGbTAtgeacZ+ccZxGPDXj9YC3tISby/bwRkPzuOml5dSXFqKc44fPf/NMXczzV+/lzMenMcfZ6Xz89eWUVzDt/yFm3MoKC49quuovKmDOjNlYCce/HQ9mbktq2yHSE0CGQpWxbaKE9LDgf7AJGAG8LSZta90ILOZZpZmZmlZWVmN3lAJvm7to/nRKb15a9lO/jFnPac9MJdbXl2GGTwyYyQf/7+JPHb5aDKy87j55aWUlNb93oa9hwr4f/9ZxhXPLMRjxo2T+7IlO493a1gudO7aLNqEexjbJ6HafX579mCOFJXw6JwN9TpXkeYskKGwHehR7nF3oOK/wu3A2865IufcZmAt3pA4inPuSedcqnMuNSkpKWANluC6fmJfEmIj+evH64gM8/D45aP48JYJnHN8N8I8xkl9E7jnvKHMXZfFfe+n13o85xyvfbONU/8+l/eW7+SnU/rxwS2n8PPTjmNgl3Y8MmdDteEyd10mJ/ZJICoirNrj906M5eLU7ry8aGulbi+RliqQofAN0N/MeptZJHAp8E6Ffd4CJgOYWSLe7iTdGRSi2kVF8K9rxvCvq8fw/k9P4cxhXfF4jr7gvOzEnlw9LoWn52/mtbRt1RwJFmfkcMk/F3Db68sZ0KkdH9xyCreefhxREWF4PMZPp/ZnU9ZhZq3YVem12/flsTHrMBPqsDDRzVP6Y2Y8PHt9/U9YpBkKD9SBnXPFZnYT8BEQBjzrnFtlZvcAac65d3zPnW5mq4ES4JfOuexAtUmav+HdK/UeVvKbswaxIfMQd765gj6JsaSmdPQ/t2TrPh74ZB1frN9LYttI/vS9YXx/dI9K4TJtSBf6d2rLI7PXc3aF8Jnnm4o66bjar0q7tY/mihN78fzXW7h+Yl/6JLWt45mKNE/WnOvOVCU1NdWlpaUFuxkSZAfyijj/sS/JzS/irRvHs/dQIQ98so6567JIiI3kxxP7cMXYXsREVv+9551vd/LTV5by2OWjmD6sq3/79S8sZsWOA8z/1WTMqhoaO9reQwVM+PNnTB3UmUdmjGyU8xNpbGa22DmXWtt+uqNZWqT4mAieuiqVguJSznp4Puc/+iUrdhzg9jMH8sWvJjNzQt8aAwHgrGFd6ZMUy8Oz11PqG1soKinlyw17mTAgsU6BAJDYtg3XjE/h3W93anU5afEUCtJi9evUlscuH0VSuzbcNu04vrhtMtdPrD0MyoR5jJun9GPN7lw+9hXlW7p1P7kFxUwcUL8JDTNP6Uu7qHD+9vG6ep+HSHOiUJAW7ZT+SXx660RumNSP2Db1HyI7Z3g3UhJieHj2el8BvCzCPMa4frUPMpcXHxPBjyf04dP0PSzdWvONcSLNmUJBQlp4mIcbJ/dj9a6DzE7PZO66LEb1bE9cVES9j3XN+N4kxEbqakFaNIWChLzzRybTo2M093+4hhU7DtS766hMbJtwfjKpL/M37OXrjZpE19R+/eYKnpm/ucHH2bz3MFP+9jlvL9vRCK1qeRQKEvIiwjzcOKkfGzIPATDhGEMB4IqxvegSF8VfP17brFeUa212HTjCywu3ct/76Q0e7H/3251syjrMLa8u4+kvQu+2KYWCCHDhqO4kt4+mY2wkQ7vFH/NxoiLCuHlqPxZn7OO/i7fX6TXOOZ7+YhP3vLu6XuU75Dsfr/JOFIiODONXry+vsa5VbWavyWRochzTh3Xhj7PSuXfWav/stFAQsJvXRFqSyHAPj10+ikMFxZVudKuvi1N78PbSndz2v+Vs3nuYX5x+HGHVHPNwQTG3/W+5/87qUue465zBdZ4OK14frdpNv05tuWVqf25+ZSn/+nIL103oU+/jZOUW8O22/fz8tAG+dcRX8dQXm8nKLeDPFx1PZHjr/x7d+s9QpI6O79Ge8fWcdVSViDAPL/7oRC47sSePf76RHz73DQfyKld23Zqdx/ce/4oPVu7ijjMHcu3JvXnuqy116hf/csNezn7ki5Dt9y5v3+FCFm7O4YwhnTl7eFdOHdSJv32ylozs+pdZ/2ytt3r/lEGdCPMYvz93CL884zjeWraTa5//hkMFxY3d/GZHoSASAJHhHv7vgmHcd+Ewvtq4l3Mfnc/a3bn+5+ety+Kcf8xn14F8nv/hCfx4Yl/unD6IM4d24d730/mgippMZV5ZtJUfPLuI9XsOccury7j7nVUUFofuYj+z12RSUuo4Y0gXzIw/nD+UcI+HO95YUe9xnTnpmXSJi2Jw1zjAuwjUjZP78eeLhvPVxmxmPLmA7EMFgTiNZkOhIBJAM07oyaszT+JIYQkXPPYl76/YxRNzN3L1vxbRNT6Kd286mVP6ewe2PR7jgUtGMLJHe372n2WVFgIqKXX88b3V3PHGCsb3S2TBHVP9Vxd4lxbWAAAQWElEQVSXPbWAPQdDc12HD1fuplt8FMOSvWNBXeOjuf3MgXy1MZv/ptVtXAegoLiEL9ZnMWVQp0rddxen9uCpq0azdk8uf/pwTaO2v7lRKIgE2OheHXj35pMZ2KUdN7y0hPs/WMOZQ7vyxg3j6Jlw9FKfURFhPHVVKl3jo7ju32ls8a00d7igmB+/kMbT8zdz9bgUnvlBKh1iI/nt2YN5eMZIVu08yNmPzGfR5pxgnGLQ5BUW88X6LE73XSWUueyEnpzQuyN/nLW6zosgLdyUw+HCEk4dVHm1PYApAztzSWoP3ly6o1UHsEJBpAl0jovilZljuX5iX3539mD+cdnIastxJLRtw3PXnIBzjqv/tYiVOw5w0RNf89naLO45bwh3nzuE8LDv/umee3w33r5pPG3bhDPjqQU8M39zyEyHnbs2i4LiUs4Y0uWo7R6Pcd+Fw8gvLuXud1bV6Vhz1mQSFeFhXN/qx5WuO6UPJaWOZ79s+P0QzZVCQaSJtAkP4/YzB/LDk3vXOrsoJTGWp38whl0H8jn7kflsz8nj2avHcNVJKVXuP6BzO96+aTxTBnbiD++tZuYLi8nKDUzfd1FJKS8v3ErO4cKAHL8+Plq1mw4xEYxJ6VDpub5J3tlI76/YzUerdtd4HOccs9fsYXzfxBoXVuqZEMP0YV15ecHWY14WtrlTKIg0U6N7deAfl43ipD4JvH7DuFrvtI6LiuCfV4zmzumDmLsuizMenMf7NQxYH6vfv7uKX7+5gp+8uLhB9wM0VGFxKbPXZHLqoM5HXTmVN3NCHwZ1jeOut1dxpLCk2mNtyDzEtpwjTKmm66i86yf2JbegmJcXbj3mtjdnCgWRZuy0wZ15ZeZYBnRuV6f9PR7jugl9mHXzySS3j+aGl5bw01eWsj+v6m/1hwuK+WxNJl+sr9va5y8tzODFBVsZ26cjCzfn8Ncg1nn6elM2ufnFlbqOyosI83DPeUPYfTCfp2q4O3n2Gt9U1IG1h8LQ5HhO7pfIs/M3U1BcfdC0VAoFkVaof+d2vHHDOG49bQDvr9jF6Q/MY86aPRQWl7Jocw5//2QdFz3+Fcf//mOuee4brnxmEfd/sKbGO3cXbsrmrrdXMfm4JF760VguO7EnT8zdyCe+suNN7aNVu4mJDOPkWpZNHZPSkWlDuvDE3I1kVjNAPCc9k8Fd4+gaH12n975+Yl8ycwt4a2nru09EoSDSSkWEefjp1P68deN4OsRE8sPn0hj++4+4+J9f88ic9RSVlHLdhD68eO2J/g/4n//32yrvedi+L4+fvLSEngkxPDRjJGEe43dnD2Zochy3vraMrdl5TXpupaWOT1bvYfJxnWocAyhz+5kDKSop5e+fVL6y2Z9XSFpGTrWzjqoyvl8CQ7rF8c95m1pdCQyVuRBp5YYmx/POzeN5+ovNZB7M56S+iZzUJ4H4mO/Kg4/vl0C3+Cj++vE6snILePyKUbTzlQ/PKyzmun8vpqiklKevSvWXFY+KCOPxy0dz9iPz+clLi3n9J+Pq9AEN3sHqlTsO8M2WHIpLHddP6Fuv8iJLt+0jK7eA04d0rtP+KYmxXDk2hee+2szV41MY2CXO/9zna7ModTBlUN2OBd6b2q6f2JebX1nKJ+l7auzCamkUCiIhoE14GDdO7lft82bGTVP60zkuitvfWMHF/1zAc9eMoVO7Nvziv9+ydvdBnr16DH2S2h71uh4dY/j7xcdz7fNp/P7dVdx34fAqj59XWMySjP0s2pLDN5tzWLptH/lF312ROEeN7avow5W7iQgzJtdhDKDMT6f24/Ul27l3VjovXHuif/vsNZkkto1keHL9CiGeObQLPTpG88TcjZw+uHOrqVelUBARv++n9iCpXRtueGkJFz72FVMGduL9Fbv59fSBTDqu6g/gqYM6c8Okvjz2+UZG9+rIRaO7U1rqWL3rIPPWZzF//V7StuyjsKQUj8GgrnFcOsZ7c1lqSgfunZXOXz9ey9Dk+DqtZeGc46NVexjXN7FeiyG1j4nk5in9+OOsdOauy2LigCSKSkqZuzaTM4Z0qXchxPAwDzNP6cNv317FN1v2cULvjvV6fXMV0FAws2nAQ0AY8LRz7v5q9rsI+C8wxjmXFsg2iUjNJh3Xif/MPIlrnlvECwsyuGBkMtedUnPF0VtPG8DSrfu5880VfLY2k683ZvvvYxjUNY6rx6cwrm8Co3t18HdLlbnvwmGs3Z3LLa8u5d2bTqZHx5iq3sJvze5ctubkcf3EvvU+t6tOSuGFBRn836x0Tu6XyOKMfRzML2ZqPcYTyrtodA8e+HQ9T8zd2GpCIWADzWYWBjwKnAkMBmaY2eAq9msH/BRYGKi2iEj9DOsez5s3jOe2acdx34XDau0aCQ/z8PCMkSTERrJwUw6TBiTxwCXHs+jOqXxwyyn8evogJh3XqVIgAMREhvPEFaMpKXX8+IXF5BfVPM3zo1W7MfNO162vyHAPt08byNo9ubyWto05azKJDPNwcv9jW1gpOjKMq8elMGdN5lEFD1uyQM4+OgHY4Jzb5JwrBF4Fzqtivz8AfwZabzERkRaoR8cYbpjUr86Dx0nt2jDvtsl8c+dU/n7JCC4Y2Z1O7aLq9NqUxFgeunQEq3cd5NdvVl/dtLTU8eHK3aT26kBSuzZ1Ppfypg3twpiUDvzt43V8tGo3J/bpSNs2x95pcuXYXkRHhPHrN1e0ippIgQyFZGBbucfbfdv8zGwk0MM5914A2yEiTSQ8zHPMA65TBnbmlqn9eWPJDl5ckHHUc/vzCnlq3iYm/+1z1uzO5Zzjux1zG82MO88azN5DBWRk5zG1HoPVVekQG8n93xvG6p0HmfbgPD5cWXNJjeYukGMKVf1m+OPfzDzAA8DVtR7IbCYwE6Bnz56N1DwRaW5umdqf5dv3c897qxncLY5wj4cXFmTw7rc7KSguZUxKB249bQDnDD/2UAAY0aM95x7fjXe+3cmUgfXvhqrovBHJDE2O52evLuP6Fxcz44Qe/PbswdUWPWzOLFDVFM3sJOBu59wZvsd3ADjn7vM9jgc2Aod8L+kC5ADn1jTYnJqa6tLSNBYt0lodyCvyLUB0hKISR0xkGBeMTOaKsb0Y1DWu9gPU0cH8Ir7dtt+/nkVjKCwu5YFP1/HE3I30TojlwUtHMLx7+0Y7fkOY2WLnXGqt+wUwFMKBdcBUYAfwDXCZc67KOrZm9jnwi9pmHykURFq/NbsPct/7a5g6qBMXjEyucoC6Oft6Yza3vraMrNwCvjeqO9GRYZQ6R0mpo9Q5SkshPiaCn0zsS4fYyCZpU9BDwdeI6cCDeKekPuucu9fM7gHSnHPvVNj3cxQKItJKHMgr4nfvrGROeiZm3mKFYWb+n3sPFZDYtg0PzxjZJNNZm0UoBIJCQURagxXbD3DzK0vYmpPHz04dwI2T+xFWzxvo6qOuoaCCeCIiQTCsezzv3nwy5xzfjb9/so4rn1lYbRXXpqRQEBEJknZRETx4yQj+/L3hLNm6jzMf+oLP12YGtU0tb76UiEgrYmZcPKYHI3u256aXl3L1v74huX00Q5PjGNotniG+n53i6nYjYEMpFEREmoH+vnW2X1yQwbJt+1m18yAfrfpuAaOkdm348YQ+/KiWOlQNpVAQEWkmoiLCjvrQz80vIn1XLit3HGDVzoPHXNqjPhQKIiLNVLuoCE7o3bFJK7BqoFlERPwUCiIi4qdQEBERP4WCiIj4KRRERMRPoSAiIn4KBRER8VMoiIiIX4srnW1mWUBGrTtWLRHY24jNaUlC9dx13qFF5129Xs65WpeZa3Gh0BBmllaXeuKtUaieu847tOi8G07dRyIi4qdQEBERv1ALhSeD3YAgCtVz13mHFp13A4XUmIKIiNQs1K4URESkBiETCmY2zczWmtkGM7s92O0JFDN71swyzWxluW0dzewTM1vv+9khmG0MBDPrYWafmVm6ma0ys1t821v1uZtZlJktMrNvfef9e9/23ma20Hfe/zGzyGC3NRDMLMzMlprZe77Hrf68zWyLma0ws2Vmlubb1mi/5yERCmYWBjwKnAkMBmaY2eDgtipgngOmVdh2OzDbOdcfmO173NoUAz93zg0CxgI3+v4ft/ZzLwCmOOeOB0YA08xsLPAn4AHfee8Drg1iGwPpFiC93ONQOe/JzrkR5aahNtrveUiEAnACsME5t8k5Vwi8CpwX5DYFhHNuHpBTYfN5wPO+vz8PnN+kjWoCzrldzrklvr/n4v2gSKaVn7vzOuR7GOH744ApwP9821vdeQOYWXfgLOBp32MjBM67Go32ex4qoZAMbCv3eLtvW6jo7JzbBd4PT6BTkNsTUGaWAowEFhIC5+7rQlkGZAKfABuB/c65Yt8urfX3/UHgNqDU9ziB0DhvB3xsZovNbKZvW6P9nofKGs1WxTZNu2qFzKwt8DrwM+fcQe+Xx9bNOVcCjDCz9sCbwKCqdmvaVgWWmZ0NZDrnFpvZpLLNVezaqs7bZ7xzbqeZdQI+MbM1jXnwULlS2A70KPe4O7AzSG0Jhj1m1hXA9zMzyO0JCDOLwBsILznn3vBtDolzB3DO7Qc+xzum0t7Myr70tcbf9/HAuWa2BW938BS8Vw6t/bxxzu30/czE+yXgBBrx9zxUQuEboL9vZkIkcCnwTpDb1JTeAX7g+/sPgLeD2JaA8PUnPwOkO+f+Xu6pVn3uZpbku0LAzKKBU/GOp3wGXOTbrdWdt3PuDudcd+dcCt5/z3Occ5fTys/bzGLNrF3Z34HTgZU04u95yNy8ZmbT8X6TCAOedc7dG+QmBYSZvQJMwls1cQ9wF/AW8BrQE9gKfN85V3EwukUzs5OBL4AVfNfH/Gu84wqt9tzNbDjegcUwvF/yXnPO3WNmffB+g+4ILAWucM4VBK+lgePrPvqFc+7s1n7evvN70/cwHHjZOXevmSXQSL/nIRMKIiJSu1DpPhIRkTpQKIiIiJ9CQURE/BQKIiLip1AQERE/hYJIEzKzSWUVPUWaI4WCiIj4KRREqmBmV/jWKVhmZv/0FZ07ZGZ/M7MlZjbbzJJ8+44wswVmttzM3iyrZW9m/czsU99aB0vMrK/v8G3N7H9mtsbMXrJQKNAkLYZCQaQCMxsEXIK38NgIoAS4HIgFljjnRgFz8d4tDvBv4FfOueF476gu2/4S8KhvrYNxwC7f9pHAz/Cu7dEHbx0fkWYhVKqkitTHVGA08I3vS3w03gJjpcB/fPu8CLxhZvFAe+fcXN/254H/+urTJDvn3gRwzuUD+I63yDm33fd4GZACzA/8aYnUTqEgUpkBzzvn7jhqo9lvK+xXU42YmrqEytfiKUH/DqUZUfeRSGWzgYt89erL1r/thfffS1kFzsuA+c65A8A+MzvFt/1KYK5z7iCw3czO9x2jjZnFNOlZiBwDfUMRqcA5t9rMfoN3dSsPUATcCBwGhpjZYuAA3nEH8JYqfsL3ob8JuMa3/Urgn2Z2j+8Y32/C0xA5JqqSKlJHZnbIOdc22O0QCSR1H4mIiJ+uFERExE9XCiIi4qdQEBERP4WCiIj4KRRERMRPoSAiIn4KBRER8fv/878dAg1O2YwAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(history_3.history['loss'])\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.1.2 - Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history_3.history['acc'])\n",
    "plt.title('model accuracy')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2.2 - Prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loss value on Test Dataset: 0.92 \n",
      "Accuracy on Test Dataset: 64.5 %\n"
     ]
    }
   ],
   "source": [
    "evaluation_2_ADAM = model_2_ADAM.evaluate(X_2_test, Y_2_test, verbose=0)\n",
    "print(\"Loss value on Test Dataset: {} \".format(round(evaluation_2_ADAM[0],2)))\n",
    "print(\"Accuracy on Test Dataset: {} %\".format(round(evaluation_2_ADAM[1]*100,2)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Even in this case, model_ADAM outperforms model_SGD. Here, in avarage, we classify 2 out of 3 shapes correctly."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3 - A First Convolutional Neural Network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3.1 - Reshaping Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "FIGSIZE = 72\n",
    "X_2_CNN_train = X_2_train.reshape(n_tr_2, FIGSIZE, FIGSIZE, 1)\n",
    "X_2_CNN_test = X_2_test.reshape(n_test_2, FIGSIZE, FIGSIZE, 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3.2 - Build the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 375 samples, validate on 125 samples\n",
      "Epoch 1/30\n",
      "375/375 [==============================] - 11s 30ms/step - loss: 0.9645 - acc: 0.4107 - val_loss: 0.7247 - val_acc: 0.8160\n",
      "Epoch 2/30\n",
      "375/375 [==============================] - 0s 622us/step - loss: 0.5464 - acc: 0.8373 - val_loss: 0.3769 - val_acc: 0.8400\n",
      "Epoch 3/30\n",
      "375/375 [==============================] - 0s 594us/step - loss: 0.3036 - acc: 0.8827 - val_loss: 0.3353 - val_acc: 0.8320\n",
      "Epoch 4/30\n",
      "375/375 [==============================] - 0s 615us/step - loss: 0.2329 - acc: 0.9040 - val_loss: 0.3442 - val_acc: 0.8320\n",
      "Epoch 5/30\n",
      "375/375 [==============================] - 0s 617us/step - loss: 0.1525 - acc: 0.9413 - val_loss: 0.3043 - val_acc: 0.8800\n",
      "Epoch 6/30\n",
      "375/375 [==============================] - 0s 610us/step - loss: 0.1199 - acc: 0.9600 - val_loss: 0.2325 - val_acc: 0.9040\n",
      "Epoch 7/30\n",
      "375/375 [==============================] - 0s 601us/step - loss: 0.1036 - acc: 0.9680 - val_loss: 0.2186 - val_acc: 0.8960\n",
      "Epoch 8/30\n",
      "375/375 [==============================] - 0s 602us/step - loss: 0.0869 - acc: 0.9760 - val_loss: 0.3890 - val_acc: 0.8640\n",
      "Epoch 9/30\n",
      "375/375 [==============================] - 0s 587us/step - loss: 0.1008 - acc: 0.9520 - val_loss: 0.3362 - val_acc: 0.8880\n",
      "Epoch 10/30\n",
      "375/375 [==============================] - 0s 630us/step - loss: 0.0795 - acc: 0.9680 - val_loss: 0.2525 - val_acc: 0.9200\n",
      "Epoch 11/30\n",
      "375/375 [==============================] - 0s 559us/step - loss: 0.0600 - acc: 0.9840 - val_loss: 0.2523 - val_acc: 0.9120\n",
      "Epoch 12/30\n",
      "375/375 [==============================] - 0s 683us/step - loss: 0.0535 - acc: 0.9840 - val_loss: 0.2507 - val_acc: 0.9120\n",
      "Epoch 13/30\n",
      "375/375 [==============================] - 0s 654us/step - loss: 0.0463 - acc: 0.9893 - val_loss: 0.3027 - val_acc: 0.9120\n",
      "Epoch 14/30\n",
      "375/375 [==============================] - 0s 628us/step - loss: 0.0461 - acc: 0.9813 - val_loss: 0.2630 - val_acc: 0.9120\n",
      "Epoch 15/30\n",
      "375/375 [==============================] - 0s 604us/step - loss: 0.0487 - acc: 0.9840 - val_loss: 0.3097 - val_acc: 0.9120\n",
      "Epoch 16/30\n",
      "375/375 [==============================] - 0s 650us/step - loss: 0.0330 - acc: 0.9920 - val_loss: 0.2302 - val_acc: 0.9200\n",
      "Epoch 17/30\n",
      "375/375 [==============================] - 0s 597us/step - loss: 0.0292 - acc: 0.9920 - val_loss: 0.2693 - val_acc: 0.9200\n",
      "Epoch 18/30\n",
      "375/375 [==============================] - 0s 612us/step - loss: 0.0255 - acc: 0.9973 - val_loss: 0.2236 - val_acc: 0.9120\n",
      "Epoch 19/30\n",
      "375/375 [==============================] - 0s 586us/step - loss: 0.0233 - acc: 0.9973 - val_loss: 0.2606 - val_acc: 0.9200\n",
      "Epoch 20/30\n",
      "375/375 [==============================] - 0s 635us/step - loss: 0.0212 - acc: 0.9973 - val_loss: 0.3198 - val_acc: 0.9040\n",
      "Epoch 21/30\n",
      "375/375 [==============================] - 0s 604us/step - loss: 0.0182 - acc: 0.9973 - val_loss: 0.2989 - val_acc: 0.9200\n",
      "Epoch 22/30\n",
      "375/375 [==============================] - 0s 579us/step - loss: 0.0169 - acc: 0.9973 - val_loss: 0.2370 - val_acc: 0.9120\n",
      "Epoch 23/30\n",
      "375/375 [==============================] - 0s 620us/step - loss: 0.0153 - acc: 0.9973 - val_loss: 0.2637 - val_acc: 0.9120\n",
      "Epoch 24/30\n",
      "375/375 [==============================] - 0s 577us/step - loss: 0.0126 - acc: 1.0000 - val_loss: 0.2832 - val_acc: 0.9200\n",
      "Epoch 25/30\n",
      "375/375 [==============================] - 0s 623us/step - loss: 0.0119 - acc: 0.9973 - val_loss: 0.2941 - val_acc: 0.9120\n",
      "Epoch 26/30\n",
      "375/375 [==============================] - 0s 621us/step - loss: 0.0086 - acc: 1.0000 - val_loss: 0.3289 - val_acc: 0.9120\n",
      "Epoch 27/30\n",
      "375/375 [==============================] - 0s 615us/step - loss: 0.0085 - acc: 1.0000 - val_loss: 0.3074 - val_acc: 0.9200\n",
      "Epoch 28/30\n",
      "375/375 [==============================] - 0s 708us/step - loss: 0.0072 - acc: 1.0000 - val_loss: 0.2943 - val_acc: 0.9120\n",
      "Epoch 29/30\n",
      "375/375 [==============================] - 0s 609us/step - loss: 0.0065 - acc: 1.0000 - val_loss: 0.2969 - val_acc: 0.9120\n",
      "Epoch 30/30\n",
      "375/375 [==============================] - 0s 605us/step - loss: 0.0059 - acc: 1.0000 - val_loss: 0.3469 - val_acc: 0.9120\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x2322458e5c0>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from keras.layers import Conv2D, MaxPooling2D, UpSampling2D, BatchNormalization, Flatten\n",
    "from keras.optimizers import SGD, Adam\n",
    "\n",
    "model_CNN = Sequential()\n",
    "\n",
    "\n",
    "model_CNN.add(Conv2D(16, (5, 5), activation='relu', input_shape=(FIGSIZE, FIGSIZE, 1)))\n",
    "model_CNN.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "model_CNN.add(Conv2D(32, (5, 5), activation='relu'))\n",
    "model_CNN.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "model_CNN.add(Flatten())\n",
    "model_CNN.add(Dense(3, activation='softmax'))\n",
    "\n",
    "adam_CNN = Adam(lr=0.001, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False)\n",
    "\n",
    "model_CNN.compile(loss='categorical_crossentropy',optimizer=adam_CNN, metrics=['accuracy'])\n",
    "\n",
    "n_epochs = 30\n",
    "model_CNN.fit(X_2_CNN_train,Y_2_train, epochs=n_epochs, batch_size=32, validation_split=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3.3 - Evaluating the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loss on the test set: 10.59 %\n",
      "Accuracy on the test set: 96.0 %\n"
     ]
    }
   ],
   "source": [
    "evaluation_2_CNN = model_CNN.evaluate(X_2_CNN_test, Y_2_test, verbose=0)\n",
    "print(\"Loss on the test set:\", round(evaluation_2_CNN[0]*100, 2), \"%\")\n",
    "print(\"Accuracy on the test set:\", round(evaluation_2_CNN[1]*100, 2), \"%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CNN improves dramatically the performances ( +64% and +32%) with respect to model_SGD and model_ADAM. This is due to a better tuning of the model's parameters\n",
    "but most of all, to the nature of CNN."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3 - A Regression Problem"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.0 - Generate and reshape data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating data:\n",
      "Creating data:\n"
     ]
    }
   ],
   "source": [
    "n_tr_3 = 1000\n",
    "noise_3 = 20\n",
    "[X_3_train, Y_3_train] = generate_dataset_regression(n_tr_3, noise_3)\n",
    "\n",
    "n_test_3 = 300\n",
    "[X_3_test, Y_3_test] = generate_test_set_regression()\n",
    "\n",
    "FIGSIZE = 72\n",
    "\n",
    "X_3_train = X_3_train.reshape(n_tr_3, FIGSIZE, FIGSIZE, 1)\n",
    "X_3_test = X_3_test.reshape(X_3_test.shape[0], FIGSIZE, FIGSIZE, 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 - Normalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "def normalize_dataset(dataset,n_tr):\n",
    "    dataset_ordered = np.zeros((n_tr,6))\n",
    "    for i in range(n_tr):\n",
    "        x = dataset[i,::2]\n",
    "        y = dataset[i,1::2]\n",
    "        x_o = [x for x,y in sorted(zip(x,y), reverse=False)]\n",
    "        y_o = [y for x,y in sorted(zip(x,y), reverse=False)]\n",
    "        dataset_ordered[i,:] = [x_o[0], y_o[0],x_o[1], y_o[1],x_o[2], y_o[2]] \n",
    "    return dataset_ordered"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.1.1 - Normalize data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_3_train_ordered = normalize_dataset(Y_3_train,n_tr_3)\n",
    "Y_3_test_ordered = normalize_dataset(Y_3_test,n_test_3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Why we normalize data?\n",
    "\n",
    "By normalizing data wrt x component we introduce uniformity in our data, i.e, the regressor knows at each time what's the correct order."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 - Build up the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 750 samples, validate on 250 samples\n",
      "Epoch 1/40\n",
      "750/750 [==============================] - 5s 7ms/step - loss: 0.1030 - val_loss: 0.0425\n",
      "Epoch 2/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0324 - val_loss: 0.0318\n",
      "Epoch 3/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0231 - val_loss: 0.0278\n",
      "Epoch 4/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0178 - val_loss: 0.0255\n",
      "Epoch 5/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0142 - val_loss: 0.0241\n",
      "Epoch 6/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0118 - val_loss: 0.0232\n",
      "Epoch 7/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0103 - val_loss: 0.0231\n",
      "Epoch 8/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0085 - val_loss: 0.0224\n",
      "Epoch 9/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0076 - val_loss: 0.0222\n",
      "Epoch 10/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0066 - val_loss: 0.0218\n",
      "Epoch 11/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0061 - val_loss: 0.0217\n",
      "Epoch 12/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0055 - val_loss: 0.0219\n",
      "Epoch 13/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0054 - val_loss: 0.0211\n",
      "Epoch 14/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0052 - val_loss: 0.0216\n",
      "Epoch 15/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0049 - val_loss: 0.0216\n",
      "Epoch 16/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0049 - val_loss: 0.0212\n",
      "Epoch 17/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0046 - val_loss: 0.0218\n",
      "Epoch 18/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0046 - val_loss: 0.0216\n",
      "Epoch 19/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0043 - val_loss: 0.0218\n",
      "Epoch 20/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0043 - val_loss: 0.0217\n",
      "Epoch 21/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0042 - val_loss: 0.0214\n",
      "Epoch 22/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0041 - val_loss: 0.0216\n",
      "Epoch 23/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0040 - val_loss: 0.0213\n",
      "Epoch 24/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0039 - val_loss: 0.0213\n",
      "Epoch 25/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0039 - val_loss: 0.0213\n",
      "Epoch 26/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0038 - val_loss: 0.0212\n",
      "Epoch 27/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0038 - val_loss: 0.0219\n",
      "Epoch 28/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0037 - val_loss: 0.0209\n",
      "Epoch 29/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0037 - val_loss: 0.0205\n",
      "Epoch 30/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0038 - val_loss: 0.0214\n",
      "Epoch 31/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0036 - val_loss: 0.0213\n",
      "Epoch 32/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0035 - val_loss: 0.0215\n",
      "Epoch 33/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0035 - val_loss: 0.0210\n",
      "Epoch 34/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0035 - val_loss: 0.0216\n",
      "Epoch 35/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0034 - val_loss: 0.0210\n",
      "Epoch 36/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0032 - val_loss: 0.0213\n",
      "Epoch 37/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0034 - val_loss: 0.0215\n",
      "Epoch 38/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0033 - val_loss: 0.0212\n",
      "Epoch 39/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0035 - val_loss: 0.0212\n",
      "Epoch 40/40\n",
      "750/750 [==============================] - 1s 1ms/step - loss: 0.0032 - val_loss: 0.0212\n"
     ]
    }
   ],
   "source": [
    "from keras.layers import Dropout\n",
    "\n",
    "model_REGRESSION = Sequential()\n",
    "\n",
    "model_REGRESSION.add(Conv2D(50, (5, 5), activation='relu', input_shape=(72, 72, 1)))\n",
    "model_REGRESSION.add(MaxPooling2D(pool_size=(2, 2)))\n",
    "model_REGRESSION.add(Flatten())\n",
    "model_REGRESSION.add(Dense(100, activation='relu'))\n",
    "model_REGRESSION.add(Dropout(0.2))\n",
    "model_REGRESSION.add(Dense(6, activation='sigmoid'))\n",
    "\n",
    "adam_REGRESSION = Adam(lr=0.001, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False)\n",
    "\n",
    "model_REGRESSION.compile(loss='MSE', optimizer=adam_REGRESSION)\n",
    "n_epochs = 40\n",
    "history_4 = model_REGRESSION.fit(X_3_train, Y_3_train_ordered, epochs=n_epochs, batch_size=32, validation_split=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2.1 - Plot Loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(history_4.history['loss'])\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2.2 - Visualize the predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "index_1 = 50\n",
    "index_2 = 78\n",
    "index_3 = 88\n",
    "\n",
    "visualize_prediction(X_3_test[index_1:index_1+1],  model_REGRESSION.predict(X_3_test[index_1:index_1+1]))\n",
    "visualize_prediction(X_3_test[index_2:index_2+1],  model_REGRESSION.predict(X_3_test[index_2:index_2+1]))\n",
    "visualize_prediction(X_3_test[index_3:index_3+1],  model_REGRESSION.predict(X_3_test[index_3:index_3+1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With a CNN with many layers we get accettable results. Classification quality depends on the figure orientation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4 - Image Denoising"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.1 - Generate Train and Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "10\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "20\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "30\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "40\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "50\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "60\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "70\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "80\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "90\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "100\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "110\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "120\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "130\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "140\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "150\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "160\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "170\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "180\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "190\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "200\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "210\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "220\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "230\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "240\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "250\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "260\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "270\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "280\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "290\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "300\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "310\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "320\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "330\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "340\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "350\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "360\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "370\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "380\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "390\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "400\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "410\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "420\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "430\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "440\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "450\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "460\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "470\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "480\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "490\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "500\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "510\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "520\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "530\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "540\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "550\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "560\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "570\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "580\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "590\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "600\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "610\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "620\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "630\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "640\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "650\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "660\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "670\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "680\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "690\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "700\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "710\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "720\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "730\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "740\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "750\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "760\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "770\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "780\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "790\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "800\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "810\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "820\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "830\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "840\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "850\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "860\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "870\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "880\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "890\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "900\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "910\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "920\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "930\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "940\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "950\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "960\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "970\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "980\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "990\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "10\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "20\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "30\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "40\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "50\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "60\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "70\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "80\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "90\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "100\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "110\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "120\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "130\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "140\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "150\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "160\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "170\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "180\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "190\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n"
     ]
    }
   ],
   "source": [
    "# Parameters\n",
    "noise_level_train = 30\n",
    "n_tr_4 = 1000\n",
    "noise_level_test = 20\n",
    "n_test_4 = 200\n",
    "\n",
    "[X_4_train,X_4_train_noise] = generate_dataset_classification_couple(n_tr_4,noise_level_train,free_location = True)\n",
    "[X_4_test,X_4_test_noise] = generate_test_set_classification_couple(n_test_4,noise_level_test, free_location = True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.2 - Visualizing training set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img_size = 15\n",
    "n_fig = 6\n",
    "plt.figure(figsize=(img_size,img_size))\n",
    "\n",
    "FIGSIZE = 72\n",
    "\n",
    "for i_fig in range(n_fig):\n",
    "    plt.subplot(2,n_fig,i_fig+1)\n",
    "    plt.imshow(X_4_train[i_fig].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "for i_fig in range(n_fig):\n",
    "    plt.subplot(2,n_fig,n_fig+i_fig+1)\n",
    "    plt.imshow(X_4_train_noise[i_fig].reshape(FIGSIZE,FIGSIZE), cmap='gray')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.95528815 0.94771011 0.99911754 ... 0.94231857 0.90687093 0.91622387]\n",
      "[1. 1. 1. ... 1. 1. 1.]\n"
     ]
    }
   ],
   "source": [
    "print(X_4_train_noise[4])\n",
    "print(X_4_train[4])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.3 - Reshape of the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1000, 5184)\n",
      "(1000, 3)\n",
      "(200, 5184)\n",
      "(200, 3, 3)\n"
     ]
    }
   ],
   "source": [
    "print(X_4_train.shape)\n",
    "print(Y_4_train.shape)\n",
    "print(X_4_test.shape)\n",
    "print(Y_4_test.shape)\n",
    "\n",
    "FIGSIZE = 72\n",
    "X_4_train = X_4_train.reshape(n_tr_4, FIGSIZE, FIGSIZE, 1)\n",
    "X_4_test = X_4_test.reshape(n_test_4, FIGSIZE, FIGSIZE, 1)\n",
    "\n",
    "X_4_train_noise = X_4_train_noise.reshape(n_tr_4, FIGSIZE, FIGSIZE, 1)\n",
    "X_4_test_noise = X_4_test_noise.reshape(n_test_4, FIGSIZE, FIGSIZE, 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.3 - Build up the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 850 samples, validate on 150 samples\n",
      "Epoch 1/38\n",
      "850/850 [==============================] - 2s 2ms/step - loss: 0.0843 - val_loss: 0.0375\n",
      "Epoch 2/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0167 - val_loss: 0.0058\n",
      "Epoch 3/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0048 - val_loss: 0.0044\n",
      "Epoch 4/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0043 - val_loss: 0.0041\n",
      "Epoch 5/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0040 - val_loss: 0.0038\n",
      "Epoch 6/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0036 - val_loss: 0.0036\n",
      "Epoch 7/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0034 - val_loss: 0.0033\n",
      "Epoch 8/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0032 - val_loss: 0.0032\n",
      "Epoch 9/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0031 - val_loss: 0.0029\n",
      "Epoch 10/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0031 - val_loss: 0.0028\n",
      "Epoch 11/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0028 - val_loss: 0.0029\n",
      "Epoch 12/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0026 - val_loss: 0.0025\n",
      "Epoch 13/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0025 - val_loss: 0.0024\n",
      "Epoch 14/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0024 - val_loss: 0.0023\n",
      "Epoch 15/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0023 - val_loss: 0.0023\n",
      "Epoch 16/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0022 - val_loss: 0.0022\n",
      "Epoch 17/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0020 - val_loss: 0.0020\n",
      "Epoch 18/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0019 - val_loss: 0.0020\n",
      "Epoch 19/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0019 - val_loss: 0.0019\n",
      "Epoch 20/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0018 - val_loss: 0.0016\n",
      "Epoch 21/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0015 - val_loss: 0.0016\n",
      "Epoch 22/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0015 - val_loss: 0.0015\n",
      "Epoch 23/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0014 - val_loss: 0.0014\n",
      "Epoch 24/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0013 - val_loss: 0.0013\n",
      "Epoch 25/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0013 - val_loss: 0.0013\n",
      "Epoch 26/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0013 - val_loss: 0.0012\n",
      "Epoch 27/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0012 - val_loss: 0.0012\n",
      "Epoch 28/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0012 - val_loss: 0.0012\n",
      "Epoch 29/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0011 - val_loss: 0.0011\n",
      "Epoch 30/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0011 - val_loss: 0.0012\n",
      "Epoch 31/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0011 - val_loss: 0.0010\n",
      "Epoch 32/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0010 - val_loss: 0.0010\n",
      "Epoch 33/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 0.0010 - val_loss: 9.7642e-04\n",
      "Epoch 34/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 9.5110e-04 - val_loss: 9.6139e-04\n",
      "Epoch 35/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 9.0256e-04 - val_loss: 9.2127e-04\n",
      "Epoch 36/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 9.0431e-04 - val_loss: 9.2971e-04\n",
      "Epoch 37/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 9.0637e-04 - val_loss: 0.0012\n",
      "Epoch 38/38\n",
      "850/850 [==============================] - 1s 1ms/step - loss: 9.1673e-04 - val_loss: 8.7860e-04\n"
     ]
    }
   ],
   "source": [
    "model_CNN_HG = Sequential()\n",
    "\n",
    "model_CNN_HG.add(Conv2D(16, (5, 5), activation='relu', padding='same', input_shape=(72, 72, 1)))\n",
    "model_CNN_HG.add(MaxPooling2D(pool_size=(2, 2), padding='same'))\n",
    "model_CNN_HG.add(Conv2D(8, (5, 5), activation='relu', padding='same'))\n",
    "model_CNN_HG.add(UpSampling2D())\n",
    "model_CNN_HG.add(Conv2D(16, (5, 5), activation='relu', padding='same'))\n",
    "model_CNN_HG.add(Conv2D(1, (5, 5), activation='sigmoid', padding='same'))\n",
    "\n",
    "adam_CNN_HG = Adam(lr=0.001, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False)\n",
    "\n",
    "model_CNN_HG.compile(loss='MSE', optimizer=adam_CNN_HG)\n",
    "\n",
    "n_epochs = 38\n",
    "\n",
    "history_5 = model_CNN_HG.fit(X_4_train_noise, X_4_train, epochs=n_epochs, batch_size=32, validation_split=0.15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.4 - Plot the loss function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.plot(history_5.history['loss'])\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.5 - Show denoised images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Denoised image - case 4')"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x936 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(3,4, figsize=(13,13))\n",
    "\n",
    "FIGSIZE = 72\n",
    "index_pred_1 = 4\n",
    "index_pred_2 = 12\n",
    "index_pred_3 = 9\n",
    "index_pred_4 = 6\n",
    "\n",
    "p_1 = model_CNN_HG.predict(X_4_train_noise[index_pred_1:index_pred_1+1]).reshape(FIGSIZE,FIGSIZE)\n",
    "p_2 = model_CNN_HG.predict(X_4_train_noise[index_pred_2:index_pred_2+1]).reshape(FIGSIZE,FIGSIZE)\n",
    "p_3 = model_CNN_HG.predict(X_4_train_noise[index_pred_3:index_pred_3+1]).reshape(FIGSIZE,FIGSIZE)\n",
    "p_4 = model_CNN_HG.predict(X_4_train_noise[index_pred_4:index_pred_4+1]).reshape(FIGSIZE,FIGSIZE)\n",
    "\n",
    "plt.subplot(3,4,1)\n",
    "plt.imshow(X_4_train[index_pred_1].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Original Image - case 1\")\n",
    "plt.subplot(3,4,5)\n",
    "plt.imshow(X_4_train_noise[index_pred_1].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Image with noise - case 1\")\n",
    "plt.subplot(3,4,9)\n",
    "plt.imshow(p_1, cmap='gray')\n",
    "plt.title(\"Denoised image - case 1\")\n",
    "\n",
    "plt.subplot(3,4,2)\n",
    "plt.imshow(X_4_train[index_pred_2].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Original Image - case 2\")\n",
    "plt.subplot(3,4,6)\n",
    "plt.imshow(X_4_train_noise[index_pred_2].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Image with noise - case 2\")\n",
    "plt.subplot(3,4,10)\n",
    "plt.imshow(p_2, cmap='gray')\n",
    "plt.title(\"Denoised image - case 2\")\n",
    "\n",
    "plt.subplot(3,4,3)\n",
    "plt.imshow(X_4_train[index_pred_3].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Original Image - case 3\")\n",
    "plt.subplot(3,4,7)\n",
    "plt.imshow(X_4_train_noise[index_pred_3].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Image with noise - case 3\")\n",
    "plt.subplot(3,4,11)\n",
    "plt.imshow(p_3, cmap='gray')\n",
    "plt.title(\"Denoised image - case 3\")\n",
    "\n",
    "plt.subplot(3,4,4)\n",
    "plt.imshow(X_4_train[index_pred_4].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Original Image - case 4\")\n",
    "plt.subplot(3,4,8)\n",
    "plt.imshow(X_4_train_noise[index_pred_4].reshape(FIGSIZE,FIGSIZE), cmap='gray')\n",
    "plt.title(\"Image with noise - case 4\")\n",
    "plt.subplot(3,4,12)\n",
    "plt.imshow(p_4, cmap='gray')\n",
    "plt.title(\"Denoised image - case 4\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Noise removal performs extremely well. Only on the corners of polygons there's a curved effect."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "jschaud",
   "language": "python",
   "name": "jschaud"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
